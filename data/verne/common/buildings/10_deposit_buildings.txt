#########################
## Limited by deposits ##
#########################

building_mote_harvesters = {
	base_buildtime = @b1_time
	icon = building_mote_harvesting_traps

	is_capped_by_modifier = yes

	category = resource

	potential = {
		NOT = { has_modifier = resort_colony }
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_regular_empire = yes }
		}
		modifier = {
			job_mote_harvester_add = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_gestalt = yes }
		}
		modifier = {
			job_mote_harvesting_drone_add = 1
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = 200
		}
		upkeep = {
			energy = 1
		}
	}

	prerequisites = {
		"tech_mine_volatile_motes"
	}

	ai_weight = {
		weight = 1000
	}#Always build the pop to work it can come later.
}

building_gas_extractors = {
	base_buildtime = @b1_time
	icon = building_gas_extractors

	is_capped_by_modifier = yes

	category = resource

	potential = {
		NOT = { has_modifier = resort_colony }
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_regular_empire = yes }
		}
		modifier = {
			job_gas_extractor_add = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_gestalt = yes }
		}
		modifier = {
			job_gas_extraction_drone_add = 1
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = 200
		}
		upkeep = {
			energy = 1
		}
	}

	prerequisites = {
		"tech_mine_exotic_gases"
	}

	ai_weight = {
		weight = 1000
	}#Always build the pop to work it can come later.
}

building_crystal_mines = {
	base_buildtime = @b1_time

	is_capped_by_modifier = yes

	category = resource

	potential = {
		NOT = { has_modifier = resort_colony }
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_regular_empire = yes }
		}
		modifier = {
			job_crystal_miner_add = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_gestalt = yes }
		}
		modifier = {
			job_crystal_mining_drone_add = 1
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = 200
		}
		upkeep = {
			energy = 1
		}
	}

	prerequisites = {
		"tech_mine_rare_crystals"
	}

	ai_weight = {
		weight = 1000
	}#Always build the pop to work it can come later.
}

building_betharian_power_plant = {
	base_buildtime = @b1_time

	is_capped_by_modifier = yes

	category = resource

	potential = {
		NOT = { has_modifier = resort_colony }
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = 200
		}
		produces = {
			energy = 10
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_regular_empire = yes }
		}
		modifier = {
			job_technician_add = 4
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_gestalt = yes }
		}
		modifier = {
			job_technician_drone_add = 4
		}
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = { is_gestalt = yes }
		}
		text = job_technician_drone_effect_desc
	}
	triggered_desc = {
		trigger = {
			exists = owner
			owner = { is_gestalt = no }
		}
		text = job_technician_effect_desc
	}

	prerequisites = {
		"tech_mine_betharian"
	}

	ai_weight = {
		weight = 500
	}
}

building_xeno_zoo = {
	base_buildtime = @b1_time

	is_capped_by_modifier = yes

	category = resource

	potential = {
		exists = owner
		owner = {
			is_regular_empire = yes
		}
	}

	destroy_trigger = {
		exists = owner
		owner = {
			is_regular_empire = no
		}
	}

	planet_modifier = {
		job_entertainer_add = 1
		job_culture_worker_add = 2
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_valid_civic = civic_warrior_culture
			}
		}
		modifier = {
			job_duelist_add = 1
			job_entertainer_add = -1
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = 200
		}
		upkeep = {
			energy = 1
		}
	}

	prerequisites = {
		"tech_alien_life_studies"
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = { has_valid_civic = civic_warrior_culture }
		}
		text = job_duelist_effect_desc
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = { NOT = { has_valid_civic = civic_warrior_culture } }
		}
		text = job_entertainer_effect_desc
	}

	triggered_desc = {
		text = job_culture_worker_effect_desc
	}

	ai_weight = {
		weight = 500
	}
}