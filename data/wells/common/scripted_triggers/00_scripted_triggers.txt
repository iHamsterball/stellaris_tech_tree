#	Example:
#
#	example_trigger = {
#		is_country_type = default
#		num_communications > 0
#	}
#
#
#	In a script file:
#
#	trigger = {
#		example_trigger = yes
#	}
#

print_scope_trigger = {
	log = "------------------------------"
	log = "- Printing the current scopes (effect) -"
	log = "- This: [This.GetName]"
	log = "- Root: [Root.GetName]"
	log = "- Prev: [Prev.GetName]"
	log = "- PrevPrev: [Prev.Prev.GetName]"
	log = "- PrevPrevPrev: [Prev.Prev.Prev.GetName]"
	log = "- PrevPrevPrevPrev: [Prev.Prev.Prev.Prev.GetName]"
	log = "- From: [From.GetName]"
	log = "- FromFrom: [From.From.GetName]"
	log = "- FromFromFrom: [From.From.From.GetName]"
	log = "- FromFromFromFrom: [From.From.From.From.GetName]"
	log = "- Root's Solar System / Star Name: [Root.Solar_System.GetName] / [Root.GetStarName]"
	log = "- Root's Owner's Name: [Root.Owner.GetName]"
	log = "- Root's Owner's Capital's Name: [Root.Owner.Capital.GetName]"
	log = "------------------------------"
}

is_pirate_system = {
	any_ship_in_system = {
		is_ship_size = pirate_station
	}
}

is_shackled_robot_species_rights = {
	has_trait = "trait_mechanical"
	species_rights_robot_full_rights_check = no
}

is_free_robot_species_rights = {
	has_trait = "trait_mechanical"
	species_rights_robot_full_rights_check = yes
}

species_rights_robot_full_rights_check = {
	exists = from
	from = {
		OR = {
			has_policy_flag = ai_full_rights
			is_mechanical_empire = yes
		}
	}
}

is_free_robot = { # The pop is a free robot with citizen rights
	has_trait = "trait_mechanical"
	exists = owner
	owner = {
		has_technology = "tech_synthetic_workers"
		OR = {
			has_policy_flag = ai_full_rights
			is_mechanical_empire = yes
		}
	}
}

is_shackled_robot = { # The pop is a non-free robot
	has_trait = "trait_mechanical"
	NAND = {
		exists = owner
		owner = {
			OR = {
				AND = {
					has_policy_flag = ai_full_rights
					OR = {
						has_technology = "tech_synthetic_workers" #Robits don't get rights until they are Synths
						has_country_flag = robots_have_souls #syndaw.545
					}
				}
				is_mechanical_empire = yes
			}
		}
	}
}

is_non_sapient_robot = { # The pop is a non-sapient robot
	has_trait = "trait_mechanical"
	NAND = {
		exists = owner
		owner = {
			has_technology = "tech_synthetic_workers"
			NOT = { has_policy_flag = ai_outlawed }
		}
	}
}

is_non_menial_laborer = {
	OR = {
		is_enslaved = no
		NOT = { has_slavery_type = { country = from type = slavery_normal } }
	}
	is_non_sapient_robot = no
	is_sapient = yes
}

wears_clothes = { # The species uses the portrait that wears clothes
	OR = {
		species_portrait = human
		species_portrait = humanoid_02
		species_portrait = humanoid_03
		species_portrait = humanoid_04
		species_portrait = humanoid_05
		species_portrait = mam5
		species_portrait = mam13
		species_portrait = mam10
		species_portrait = mam14
		species_portrait = mam4
		species_portrait = mam9
		species_portrait = mam11
		species_portrait = mam6
		species_portrait = mam3
		species_portrait = mam12
		species_portrait = mam7
		species_portrait = mam15
		species_portrait = mam2
		species_portrait = mam8
		species_portrait = mam1
		species_portrait = mam16
		species_portrait = mam17
		species_portrait = rep1
		species_portrait = rep2
		species_portrait = rep3
		species_portrait = rep4
		species_portrait = rep5
		species_portrait = rep6
		species_portrait = rep7
		species_portrait = rep8
		species_portrait = rep9
		species_portrait = rep10
		species_portrait = rep11
		species_portrait = rep12
		species_portrait = rep13
		species_portrait = rep15
		species_portrait = rep16
		species_portrait = avi1
		species_portrait = avi2
		species_portrait = avi4
		species_portrait = avi5
		species_portrait = avi6
		species_portrait = avi8
		species_portrait = avi9
		species_portrait = avi10
		species_portrait = avi11
		species_portrait = avi12
		species_portrait = avi13
		species_portrait = avi14
		species_portrait = avi15
		species_portrait = avi16
		species_portrait = art7
		species_portrait = art6
		species_portrait = art8
		species_portrait = art9
		species_portrait = art10
		species_portrait = mol1
		species_portrait = mol2
		species_portrait = mol3
		species_portrait = mol4
		species_portrait = mol5
		species_portrait = mol11
		species_portrait = mol12
		species_portrait = mol13
		species_portrait = mol14
		species_portrait = mol15
		species_portrait = fun6
		species_portrait = fun7
		species_portrait = fun8
		species_portrait = fun9
		species_portrait = fun10
		species_portrait = pla6
		species_portrait = pla7
		species_portrait = pla8
		species_portrait = pla9
		species_portrait = pla10
	}
}

is_fallen_empire_machine = {
	OR = {
		is_country_type = fallen_empire
		is_country_type = awakened_fallen_empire
	}
	has_authority = auth_machine_intelligence
}

is_fallen_empire_materialist = {
	OR = {
		is_country_type = fallen_empire
		is_country_type = awakened_fallen_empire
	}
	has_ethic = ethic_fanatic_materialist
}

is_fallen_empire_spiritualist = {
	OR = {
		is_country_type = fallen_empire
		is_country_type = awakened_fallen_empire
	}
	has_ethic = ethic_fanatic_spiritualist
}

is_fallen_empire_xenophobe = {
	OR = {
		is_country_type = fallen_empire
		is_country_type = awakened_fallen_empire
	}
	has_ethic = ethic_fanatic_xenophobe
}

is_fallen_empire_xenophile = {
	OR = {
		is_country_type = fallen_empire
		is_country_type = awakened_fallen_empire
	}
	has_ethic = ethic_fanatic_xenophile
}

is_valid_fallen_empire_for_task = {
	is_country_type = fallen_empire
	is_at_war = no
	fleet_power > 60000
	OR = {
		has_ethic = ethic_fanatic_spiritualist
		has_ethic = ethic_fanatic_xenophile
		has_ethic = ethic_fanatic_materialist
		has_authority = auth_machine_intelligence
	}
}

is_fe_cluster = {
	OR = {
		is_in_cluster = fe1_cluster
		is_in_cluster = fe2_cluster
		is_in_cluster = fe3_cluster
		is_in_cluster = fe4_cluster
		is_in_cluster = fe_mach_cluster
	}
}

has_leviathans = {
	host_has_dlc = "Leviathans Story Pack"
}

has_utopia = {
	host_has_dlc = "Utopia"
}

has_plantoids = {
	host_has_dlc = "Plantoid"
}

has_synthethic_dawn = {
	host_has_dlc = "Synthetic Dawn Story Pack"
}

has_humanoids = {
	host_has_dlc = "Humanoids Species Pack"
}

has_lithoids = {
	host_has_dlc = "Lithoids Species Pack"
}

has_federations_dlc = {
	host_has_dlc = "Federations"
}

uninhabitable_regular_planet = {
	OR = {
		is_planet_class = pc_molten
		is_planet_class = pc_barren
		is_planet_class = pc_barren_cold
		is_planet_class = pc_toxic
		is_planet_class = pc_frozen
	}
}

colonizeable_planet = {
	OR = {
		is_planet_class = pc_city
		is_planet_class = pc_relic
		is_planet_class = pc_nuked
		is_planet_class = pc_hive
		is_planet_class = pc_machine
		habitable_structure = yes
		habitable_planet = yes
	}
}

habitable_planet = {
	OR = {
		is_planet_class = pc_desert
		is_planet_class = pc_tropical
		is_planet_class = pc_arid
		is_planet_class = pc_continental
		is_planet_class = pc_ocean
		is_planet_class = pc_tundra
		is_planet_class = pc_arctic
		is_planet_class = pc_alpine
		is_planet_class = pc_savannah
		is_planet_class = pc_gaia
		is_planet_class = pc_relic
		is_planet_class = pc_city
	}
}

can_have_habitable_deposits = {
	OR = {
		is_planet_class = pc_nuked
		is_planet_class = pc_desert
		is_planet_class = pc_tropical
		is_planet_class = pc_arid
		is_planet_class = pc_continental
		is_planet_class = pc_ocean
		is_planet_class = pc_tundra
		is_planet_class = pc_arctic
		is_planet_class = pc_alpine
		is_planet_class = pc_savannah
		is_planet_class = pc_gaia
		is_planet_class = pc_relic
	}
}

habitable_structure = {
	OR = {
		is_planet_class = pc_ringworld_habitable
		is_planet_class = pc_habitat
	}
}

is_guardian_country = {
	OR = {
		is_country_type = guardian
		is_country_type = guardian_dragon
		is_country_type = guardian_sphere
		is_country_type = guardian_wraith
		is_country_type = guardian_horror
		is_country_type = guardian_fortress
		is_country_type = guardian_hiver
		is_country_type = guardian_stellarite
		is_country_type = guardian_dreadnought
		is_country_type = guardian_scavenger_bot
		is_country_type = guardian_elderly_tiyanki
		is_country_type = guardian_hatchling
	}
}

has_encountered_other_species = {
	OR = {
		has_origin = origin_syncretic_evolution
		has_civic = civic_machine_servitor
		num_communications > 0
		any_owned_pop = {
			NOT = { has_trait = "trait_mechanical" }
			NOT = { is_same_species = prev }
		}
	}
}

has_citizenship_rights = {
	OR = {
		has_citizenship_type = { type = citizenship_full }
		has_citizenship_type = { type = citizenship_full_machine }
	}
}

allows_alien_leaders = {
	any_owned_planet ={
		any_owned_pop = {
			NOT = { is_same_species = root }
			has_citizenship_rights = yes
		}
	}
}

can_be_military_leader = {
	is_enslaved = no
	is_sapient = yes
	OR = {
		is_robot_pop = no
		owner = { has_policy_flag = ai_full_rights }
		owner = { has_authority = auth_machine_intelligence }
	}
	OR = {
		AND = { # MIs only accept Fully Integrated leaders
			owner = { has_authority = auth_machine_intelligence }
			has_citizenship_type = { type = citizenship_full_machine }
			has_military_service_type = { type = military_service_full }
		}
		AND = { # non-MIs accept whatever
			NOT = { owner = { has_authority = auth_machine_intelligence } }
			has_military_service_type = { type = military_service_full }
		}
	}
}

can_be_soldier = {
	is_sapient = yes
	OR = {
		has_military_service_type = { type = military_service_full }
		has_military_service_type = { type = military_service_limited }
	}
}

allows_slavery = {
	OR = {
		has_policy_flag = slavery_allowed
		has_ethic = ethic_gestalt_consciousness
	}
}

allows_purge = {
	OR = {
		has_ethic = ethic_gestalt_consciousness
		has_valid_civic = civic_fanatic_purifiers
		has_policy_flag = purge_allowed
		has_policy_flag = purge_displacement_only
	}
}

can_build_megastructure_on_planet = {
	has_any_megastructure = no
	NOR = {
		has_planet_flag = megastructure
		has_planet_flag = has_megastructure
		solar_system = {
			has_star_flag = ring_world_built
		}
	}
}

has_generic_government = {
	OR = {
		has_government = gov_despotic_empire
		has_government = gov_feudal_empire
		has_government = gov_constitutional_dictatorship
		has_government = gov_plutocratic_oligarchy
		has_government = gov_representative_democracy
	}
}

has_spiritualist_government = {
	OR = {
		has_government = gov_theocratic_monarchy
		has_government = gov_theocratic_dictatorship
		has_government = gov_theocratic_oligarchy
		has_government = gov_theocratic_republic
		has_government = gov_divine_empire
		has_government = gov_holy_tribunal
	}
}

has_militarist_government = {
	OR = {
		has_government = gov_star_empire
		has_government = gov_military_dictatorship
		has_government = gov_military_junta
		has_government = gov_military_commissariat
		has_government = gov_martial_empire
		has_government = gov_martial_dictatorship
		has_government = gov_war_council
		has_government = gov_assembly_of_clans
		has_government = gov_citizen_stratocracy
		has_government = gov_citizen_republic
	}
}

has_pacifist_government = {
	OR = {
		has_government = gov_irenic_monarchy
		has_government = gov_irenic_dictatorship
		has_government = gov_irenic_bureaucracy
		has_government = gov_moral_democracy
		has_government = gov_celestial_empire
	}
}

has_materialist_government = {
	OR = {
		has_government = gov_despotic_hegemony
		has_government = gov_totalitarian_regime
		has_government = gov_executive_committee
		has_government = gov_direct_democracy
		has_government = gov_illuminated_autocracy
		has_government = gov_technocratic_dictatorship
		has_government = gov_science_directorate
		has_government = gov_rational_consensus
	}
}

has_primitive_government = {
	OR = {
		has_government = gov_feudal_realms
		has_government = gov_fragmented_nation_states
	}
}

#Works in species scope, with a country in from
is_lonely_hive_mind_pop = {
	has_trait = trait_hive_mind
	NOT = { from = { has_authority = auth_hive_mind } }
	from = {
		NOR = {
			is_country_type = fallen_empire
			is_country_type = awakened_fallen_empire
		}
	}
}

#Works in species scope, with a country in from
is_disconnected_machine_pop = {
	has_trait = trait_machine_unit
	from = {
		NOR = {
			has_authority = auth_machine_intelligence
			is_country_type = fallen_empire
			is_country_type = awakened_fallen_empire
		}
	}
}

has_culture_shock = {
	OR = {
		has_modifier = culture_shock_stone_age
		has_modifier = culture_shock_bronze_age
		has_modifier = culture_shock_iron_age
		has_modifier = culture_shock_late_medieval_age
		has_modifier = culture_shock_renaissance_age
		has_modifier = culture_shock_steam_age
		has_modifier = culture_shock_industrial_age
		has_modifier = culture_shock_machine_age
		has_modifier = culture_shock_atomic_age
		has_modifier = culture_shock_early_space_age
	}
}

has_any_megastructure_in_empire = {
	any_system_within_border = {
		OR = {
			has_megastructure = spy_orb_1
			has_megastructure = spy_orb_2
			has_megastructure = spy_orb_3
			has_megastructure = spy_orb_4
			has_megastructure = think_tank_1
			has_megastructure = think_tank_2
			has_megastructure = think_tank_3
			has_megastructure = think_tank_4
			has_megastructure = dyson_sphere_1
			has_megastructure = dyson_sphere_2
			has_megastructure = dyson_sphere_3
			has_megastructure = dyson_sphere_4
			has_megastructure = dyson_sphere_5
			has_megastructure = ring_world_2_intermediate
			has_megastructure = dyson_sphere_ruined
			has_megastructure = dyson_sphere_restored
			has_megastructure = spy_orb_ruined
			has_megastructure = spy_orb_restored
			has_megastructure = think_tank_ruined
			has_megastructure = think_tank_restored
			has_megastructure = ring_world_ruined
			has_megastructure = ring_world_restored
			has_megastructure = matter_decompressor_1
			has_megastructure = matter_decompressor_2
			has_megastructure = matter_decompressor_3
			has_megastructure = matter_decompressor_4
			has_megastructure = matter_decompressor_ruined
			has_megastructure = matter_decompressor_restored
			has_megastructure = strategic_coordination_center_1
			has_megastructure = strategic_coordination_center_2
			has_megastructure = strategic_coordination_center_3
			has_megastructure = strategic_coordination_center_ruined
			has_megastructure = strategic_coordination_center_restored
			has_megastructure = mega_art_installation_1
			has_megastructure = mega_art_installation_2
			has_megastructure = mega_art_installation_3
			has_megastructure = mega_art_installation_ruined
			has_megastructure = mega_art_installation_restored
			has_megastructure = interstellar_assembly_1
			has_megastructure = interstellar_assembly_2
			has_megastructure = interstellar_assembly_3
			has_megastructure = interstellar_assembly_4
			has_megastructure = interstellar_assembly_ruined
			has_megastructure = interstellar_assembly_restored
		}
	}
}

has_any_tradition_unlocked = {
	OR = {
		has_tradition = tr_discovery_adopt
		has_tradition = tr_diplomacy_adopt
		has_tradition = tr_domination_adopt
		has_tradition = tr_expansion_adopt
		has_tradition = tr_harmony_adopt
		has_tradition = tr_prosperity_adopt
		has_tradition = tr_supremacy_adopt
	}
}

is_fallen_machine_empire = {
	OR = {
		is_country_type = fallen_empire
		is_country_type = awakened_fallen_empire
	}
	has_authority = auth_machine_intelligence
}

is_berserk_fallen_machine_empire = {
	is_fallen_machine_empire = yes
	has_valid_civic = civic_malfunctioning_custodian
}

is_binary_star = {
	OR = {
		is_star_class = sc_binary_1
		is_star_class = sc_binary_2
		is_star_class = sc_binary_3
		is_star_class = sc_binary_4
		is_star_class = sc_binary_5
		is_star_class = sc_binary_6
		is_star_class = sc_binary_7
		is_star_class = sc_binary_8
		is_star_class = sc_binary_9
		is_star_class = sc_binary_10
	}
}

is_under_crisis_bombardment = {
	has_orbital_bombardment = yes
	any_fleet_in_orbit = {
		exists = owner
		owner = {
			is_crisis_faction = yes
		}
	}
}

is_crisis_faction = {
	OR = {
		is_country_type = swarm
		is_country_type = extradimensional
		is_country_type = extradimensional_2
		is_country_type = extradimensional_3
		is_country_type = ai_empire
		is_country_type = gray_goo
		is_country_type = awakened_marauders
	}
}

has_crisis = {
	OR = {
		has_global_flag = crisis_stage_1
		has_global_flag = crisis_stage_2
		has_global_flag = crisis_stage_3
		has_global_flag = crisis_stage_4
	}
}

# Use: has_crisis_stage = { STAGE = 3}
# Default value 1.
# Use default value: has_crisis_stage = yes
has_crisis_stage ={
	has_global_flag = crisis_stage_$STAGE|1$
}

has_crisis_stage_1 ={
	has_global_flag = crisis_stage_1
}

has_crisis_stage_2 ={
	has_global_flag = crisis_stage_2
}

has_crisis_stage_3 ={
	has_global_flag = crisis_stage_3
}

has_crisis_stage_4 ={
	has_global_flag = crisis_stage_4
}

is_pre_sapient_livestock = {
	is_sapient = no
	has_citizenship_type = { type = citizenship_slavery }
	has_slavery_type = { type = slavery_livestock  }
}

is_synthetic_empire = {
	OR = {
		has_country_flag = synthetic_empire
		has_authority = auth_machine_intelligence
	}
}

is_trinary_star = {
	OR = {
		is_star_class = sc_trinary_1
		is_star_class = sc_trinary_2
		is_star_class = sc_trinary_3
		is_star_class = sc_trinary_4
	}
}

planet_can_be_liberated_from_owner = {
	owner = {
		NOR = {
			is_country_type = awakened_fallen_empire
			is_country_type = fallen_empire
			has_authority = auth_hive_mind
			has_authority = auth_machine_intelligence
		}
	}
}

is_cyborg_empire = {
	owner_species = { has_trait = trait_cybernetic }
}

is_mechanical_empire = {
	OR = {
		owner_species = { has_trait = trait_mechanical }
		has_country_flag = synthetic_empire
	}
}

is_robot_empire = {
	OR = {
		owner_species = { has_trait = trait_mechanical }
		has_country_flag = synthetic_empire
		has_authority = auth_machine_intelligence
	}
}

is_lithoid_empire = {
	owner_species = { is_lithoid = yes }
}

is_lithoid_devouring_swarm = {
	is_lithoid_empire = yes
	has_valid_civic = civic_hive_devouring_swarm
}

is_lithoid_devouring_swarm_consumption_world = { # planet scope
	exists = owner
	NOR = {
		is_ideal_planet_class = {
			who = owner
			status = yes
		}
		AND = {
			planet_size > 13
			owner = {
				any_owned_pop = {
					is_being_purged = no
					prevprev = { habitability = { who = prev value >= 0.9 } }
				}
			}
		}
	}
}

is_country_type_with_subjects = {
	OR = {
		is_country_type = default
		is_country_type = awakened_fallen_empire
	}
}

is_valid_target_fe_stop_atrocities = {
	OR = {
		allows_slavery = yes
		allows_purge = yes
	}
	NOT = { has_ethic = ethic_gestalt_consciousness }
	NOR = {
		has_valid_civic = civic_machine_terminator
		has_valid_civic = civic_hive_devouring_swarm
		has_valid_civic = civic_fanatic_purifiers
	}
}

is_valid_target_fe_stop_ai = {
	NOT = { has_policy_flag = ai_outlawed }
	NOT = { has_ethic = ethic_gestalt_consciousness }
	has_technology = tech_synthetic_workers
	is_mechanical_empire = no
}

is_valid_target_fe_cleanse_holy_worlds = {
	NOT = { has_relic = r_severed_head }
	OR = {
		any_owned_planet = {
			has_modifier = "holy_planet"
		}
		any_subject = {
			any_owned_planet = {
				has_modifier = "holy_planet"
			}
		}
	}
}

has_sapient_combat_computer = {
	OR = {
		has_component = COMBAT_COMPUTER_SWARM_SAPIENT
		has_component = COMBAT_COMPUTER_LINE_SAPIENT
		has_component = COMBAT_COMPUTER_PICKET_SAPIENT
		has_component = COMBAT_COMPUTER_ARTILLERY_SAPIENT
		has_component = COMBAT_COMPUTER_CARRIER_SAPIENT
		has_component = COMBAT_COMPUTER_PLATFORM_SAPIENT
	}
}

# This can replace all the specific ones.
is_ethics_aligned = {
	OR = {
		has_ethic = ethic_$ARG1$
		has_ethic = ethic_fanatic_$ARG1$
	}
}

is_pacifist = {
	OR = {
		has_ethic = ethic_pacifist
		has_ethic = ethic_fanatic_pacifist
	}
}

is_militarist = {
	OR = {
		has_ethic = ethic_militarist
		has_ethic = ethic_fanatic_militarist
	}
}

is_materialist = {
	OR = {
		has_ethic = ethic_materialist
		has_ethic = ethic_fanatic_materialist
	}
}

is_spiritualist = {
	OR = {
		has_ethic = ethic_spiritualist
		has_ethic = ethic_fanatic_spiritualist
	}
}

is_egalitarian = {
	OR = {
		has_ethic = ethic_egalitarian
		has_ethic = ethic_fanatic_egalitarian
	}
}

is_authoritarian = {
	OR = {
		has_ethic = ethic_authoritarian
		has_ethic = ethic_fanatic_authoritarian
	}
}

is_xenophile = {
	OR = {
		has_ethic = ethic_xenophile
		has_ethic = ethic_fanatic_xenophile
	}
}

is_xenophobe = {
	OR = {
		has_ethic = ethic_xenophobe
		has_ethic = ethic_fanatic_xenophobe
	}
}

is_regular_empire = {
	NOT = { has_ethic = ethic_gestalt_consciousness	}
}

is_megacorp = {
	has_authority = auth_corporate
}

is_gestalt = {
	has_ethic = ethic_gestalt_consciousness
}

is_hive_empire = {
	has_authority = auth_hive_mind
}

is_machine_empire = {
	has_authority = auth_machine_intelligence
}

is_autocracy = { #Power of one
	OR = {
		has_ethic = ethic_gestalt_consciousness
		has_authority = auth_imperial
		has_authority = auth_dictatorial
	}
}

is_oligarchy = { #Power of few
	OR = {
		has_authority = auth_oligarchic
		has_authority = auth_corporate
	}
	NOR = {
		has_ethic = ethic_egalitarian
		has_ethic = ethic_fanatic_egalitarian
	}
}

is_democracy = { #Power of many
	has_authority = auth_democratic
	AND = {
		has_authority = auth_corporate
		is_egalitarian = yes
	}
}

can_set_ai_policy = {
	is_mechanical_empire = no
	OR = {
		has_technology = tech_synthetic_workers
		has_technology = tech_sapient_ai
		any_relation = {
			has_communications = prev
			OR = {
				has_technology = tech_synthetic_workers
				has_technology = tech_sapient_ai
				has_authority = auth_machine_intelligence
			}
			OR = {
				is_country_type = default
				has_ai_personality_behaviour = robot_exploiter
				has_ai_personality_behaviour = robot_liberator
			}
		}
	}
}

has_met_primitives = {
	OR = {
		has_country_flag = encountered_first_primitive
		any_relation = {
			has_communications = root
			is_country_type = primitive
		}
	}
}

has_comms_with_alien_empire = {
	any_relation = {
		has_communications = root
		OR = {
			is_country_type = default
			is_country_type = fallen_empire
			is_country_type = awakened_fallen_empire
		}
	}
}

has_comms_with_alien_civilization = {
	any_relation = {
		has_communications = root
		OR = {
			is_country_type = default
			is_country_type = fallen_empire
			is_country_type = awakened_fallen_empire
			is_country_type = enclave
			is_country_type = nomad
			is_country_type = dormant_marauders
			is_country_type = awakened_marauders
		}
	}
}

has_total_war_cb = {
	OR = {
		#attacker checks
		AND = {
			OR = {
				is_country_type = default
				is_country_type = awakened_fallen_empire
				is_country_type = fallen_empire
			}
			OR = {
				is_country_type = awakened_fallen_empire
				has_valid_civic = civic_hive_devouring_swarm
				has_valid_civic = civic_machine_assimilator
				AND = {
					has_valid_civic = civic_machine_terminator
					from = {
						NOR = {
							has_country_flag = synthetic_empire
							has_authority = auth_machine_intelligence
						}
					}
				}
				AND = {
					has_valid_civic = civic_fanatic_purifiers
					NOT = { is_same_species = from }
				}
			}
		}
		#end threat checks
		AND = {
			is_country_type = default
			NOR = {
				is_country_type = awakened_fallen_empire
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
				has_valid_civic = civic_machine_assimilator
				has_valid_civic = civic_machine_terminator
			}
			from = {
				OR = {
					is_country_type = awakened_fallen_empire
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_machine_assimilator
					has_valid_civic = civic_machine_terminator
				}
			}
		}
	}
}

has_isolated_system = {
	any_system_within_border = {
		any_neighbor_system = {
			root = {
				intel_level = {
					level > none
					system = prev
				}
			}
			NOR = {
				has_star_flag = pirates_spawned
				has_star_flag = precursor_system
				has_star_flag = enclave
				any_fleet_in_system = {
					exists = owner
					owner = { is_hostile = root }
				}
				any_fleet_in_system = {
					is_ship_size = constructor
					is_constructing = starbase
				}
				any_fleet_in_system = {
					fleet_power > 1000
				}
			}
			NOT = { exists = space_owner }
			any_neighbor_system = {
				exists = space_owner
				NOT = {
					space_owner = { NOT = { is_same_value = root } }
				}
			}
			NOT = {
				any_neighbor_system = {
					NOT = { exists = space_owner }
				}
			}
		}
	}
}

has_bordering_system = {
	any_system_within_border = {
		any_neighbor_system = {
			root = {
				intel_level = {
					level > none
					system = prev
				}
			}
			NOR = {
				has_star_flag = pirates_spawned
				has_star_flag = precursor_system
				has_star_flag = enclave
				any_fleet_in_system = {
					exists = owner
					owner = { is_hostile = root }
				}
				any_ship_in_system = {
					is_ship_size = constructor
					is_constructing = starbase
				}
				any_fleet_in_system = {
					fleet_power > 1000
				}
			}
			NOT = { exists = space_owner }
		}
	}
}

# this: system
# root: great khan's horde (country)
is_potential_diadochi_system = {
	exists = starbase
	starbase = { owner = { is_same_value = root } }
	NOR = {
		has_star_flag = first_diadochi_system
		has_star_flag = second_diadochi_system
		has_star_flag = third_diadochi_system
		has_star_flag = fourth_diadochi_system
	}
}

has_no_non_gate_megastructure = {
	OR = {
		has_any_megastructure = no
		NOT = {
			any_system_megastructure = { # exclude gateways
				OR = {
					is_megastructure_type = dyson_sphere_0
					is_megastructure_type = dyson_sphere_1
					is_megastructure_type = dyson_sphere_2
					is_megastructure_type = dyson_sphere_3
					is_megastructure_type = dyson_sphere_4
					is_megastructure_type = dyson_sphere_5
					is_megastructure_type = dyson_sphere_ruined
					is_megastructure_type = dyson_sphere_restored

					is_megastructure_type = ring_world_1
					is_megastructure_type = ring_world_2_intermediate
					is_megastructure_type = ring_world_2
					is_megastructure_type = ring_world_3_intermediate
					is_megastructure_type = ring_world_ruined
					is_megastructure_type = ring_world_restored

					is_megastructure_type = think_tank_0
					is_megastructure_type = think_tank_1
					is_megastructure_type = think_tank_2
					is_megastructure_type = think_tank_3
					is_megastructure_type = think_tank_4
					is_megastructure_type = think_tank_ruined
					is_megastructure_type = think_tank_restored

					is_megastructure_type = spy_orb_0
					is_megastructure_type = spy_orb_1
					is_megastructure_type = spy_orb_2
					is_megastructure_type = spy_orb_3
					is_megastructure_type = spy_orb_4
					is_megastructure_type = spy_orb_ruined
					is_megastructure_type = spy_orb_restored

					is_megastructure_type = habitat_0

					is_megastructure_type = matter_decompressor_0
					is_megastructure_type = matter_decompressor_1
					is_megastructure_type = matter_decompressor_2
					is_megastructure_type = matter_decompressor_3
					is_megastructure_type = matter_decompressor_4
					is_megastructure_type = matter_decompressor_ruined
					is_megastructure_type = matter_decompressor_restored

					is_megastructure_type = strategic_coordination_center_0
					is_megastructure_type = strategic_coordination_center_1
					is_megastructure_type = strategic_coordination_center_2
					is_megastructure_type = strategic_coordination_center_3
					is_megastructure_type = strategic_coordination_center_ruined
					is_megastructure_type = strategic_coordination_center_restored

					is_megastructure_type = mega_art_installation_0
					is_megastructure_type = mega_art_installation_1
					is_megastructure_type = mega_art_installation_2
					is_megastructure_type = mega_art_installation_3
					is_megastructure_type = mega_art_installation_ruined
					is_megastructure_type = mega_art_installation_restored

					is_megastructure_type = interstellar_assembly_0
					is_megastructure_type = interstellar_assembly_1
					is_megastructure_type = interstellar_assembly_2
					is_megastructure_type = interstellar_assembly_3
					is_megastructure_type = interstellar_assembly_4
					is_megastructure_type = interstellar_assembly_ruined
					is_megastructure_type = interstellar_assembly_restored
				}
			}
		}
	}
}

is_homicidal = {
	OR = {
		has_valid_civic = civic_fanatic_purifiers
		has_valid_civic = civic_machine_terminator
		has_valid_civic = civic_hive_devouring_swarm
	}
}

is_unfriendly = {
	OR = {
		has_valid_civic = civic_fanatic_purifiers
		has_valid_civic = civic_machine_terminator
		has_valid_civic = civic_hive_devouring_swarm
		has_valid_civic = civic_barbaric_despoilers
	}
}

is_slaver = {
	OR = {
		has_valid_civic = civic_barbaric_despoilers
		has_ascension_perk = ap_nihilistic_acquisition
	}
}

has_active_xuracorp_trade = {
	OR = {
		has_modifier = enclave_trade_1_xur
		has_modifier = enclave_trade_2_xur
		has_modifier = enclave_trade_3_xur
		has_modifier = enclave_trade_4_xur
		has_modifier = enclave_trade_5_xur
	}
}

has_active_riggan_trade = {
	OR = {
		has_modifier = enclave_trade_1_rig
		has_modifier = enclave_trade_2_rig
		has_modifier = enclave_trade_3_rig
		has_modifier = enclave_trade_4_rig
		has_modifier = enclave_trade_5_rig
	}
}

has_active_muutagan_trade = {
	OR = {
		has_modifier = enclave_trade_1_mut
		has_modifier = enclave_trade_2_mut
		has_modifier = enclave_trade_3_mut
		has_modifier = enclave_trade_4_mut
		has_modifier = enclave_trade_5_mut
	}
}


has_distar = {
	host_has_dlc = "Distant Stars Story Pack"
}

is_wet = {
	OR = {
		is_planet_class = pc_ocean
		is_planet_class = pc_continental
		is_planet_class = pc_tropical
	}
}

is_dry = {
	OR = {
		is_planet_class = pc_arid
		is_planet_class = pc_desert
		is_planet_class = pc_savannah
	}
}

is_cold = {
	OR = {
		is_planet_class = pc_arctic
		is_planet_class = pc_tundra
		is_planet_class = pc_alpine
	}
}

is_fallen_empire = {
	OR = {
		is_country_type = fallen_empire
		is_country_type = awakened_fallen_empire
	}
}

has_galactic_wonders = {
	OR = {
		has_ascension_perk = ap_galactic_wonders_utopia
		has_ascension_perk = ap_galactic_wonders_megacorp
		has_ascension_perk = ap_galactic_wonders_utopia_and_megacorp
	}
}

can_build_megastructures = {
	OR = {
		has_technology = tech_science_nexus
		has_technology = tech_sentry_array
		has_technology = tech_strategic_coordination
		has_technology = tech_interstellar_assembly
		has_technology = tech_mega_art
		has_technology = tech_gateway_construction
		has_technology = tech_dyson_sphere
		has_technology = tech_matter_decompressor
		has_technology = tech_ring_world
	}
}

has_gw_ring_world = {
	OR = {
		has_ascension_perk = ap_galactic_wonders_utopia
		has_ascension_perk = ap_galactic_wonders_utopia_and_megacorp
	}
}

has_gw_dyson_sphere = {
	OR = {
		has_ascension_perk = ap_galactic_wonders_utopia
		has_ascension_perk = ap_galactic_wonders_utopia_and_megacorp
	}
}

has_gw_think_tank = {
	has_technology = tech_science_nexus
}

has_gw_spy_orb = {
	has_technology = tech_sentry_array
}

has_gw_matter_decompressor = {
	OR = {
		has_ascension_perk = ap_galactic_wonders_megacorp
		has_ascension_perk = ap_galactic_wonders_utopia_and_megacorp
	}
}

has_gw_strategic_coordination_center = {
	has_technology = tech_strategic_coordination
}

has_gw_mega_art_installation = {
	has_technology = tech_mega_art
}

has_gw_interstellar_assembly = {
	has_technology = tech_interstellar_assembly
}

can_generate_trade_value = {
	exists = owner
	owner = { is_country_type = default }
}

is_crossbreeding_possible = {
	is_sapient = yes
	NOR = {
		has_trait = trait_machine_unit
		has_trait = trait_mechanical
		has_trait = trait_hive_mind
		has_trait = trait_self_modified
		is_half_species = any
	}
}

has_ancrel = {
	host_has_dlc = "Ancient Relics Story Pack"
}

simulation_1_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 4
	}
}

factory_1_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 4
	}
	OR = {
		AND = {
			is_gestalt = yes
			has_monthly_income = {
				resource = minerals
				value > 16
			}
		}
		AND = {
			is_regular_empire = yes
			has_monthly_income = {
				resource = minerals
				value > 12
			}
		}
	}
}

research_lab_1_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 4
	}
	OR = {
		AND = {
			is_hive_empire = yes
			has_monthly_income = {
				resource = minerals
				value > 12
			}
		}
		AND = {
			is_machine_empire = yes
			has_monthly_income = {
				resource = minerals
				value > 12
			}
		}
		AND = {
			is_regular_empire = yes
			has_monthly_income = {
				resource = consumer_goods
				value > 4
			}
		}
	}
}

foundry_1_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 4
	}
	OR = {
		AND = {
			is_hive_empire = yes
			has_monthly_income = {
				resource = minerals
				value > 12
			}
		}
		AND = {
			is_machine_empire = yes
			has_monthly_income = {
				resource = minerals
				value > 16
			}
		}
		AND = {
			is_regular_empire = yes
			has_monthly_income = {
				resource = minerals
				value > 12
			}
		}
	}
}

autochthon_monument_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 1
	}

	is_regular_empire = yes
	has_monthly_income = {
		resource = consumer_goods
		value > 4
	}
}

organic_sanctuary_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 2
	}
}

holo_theatres_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 2
	}
	OR = {
		AND = {
			has_valid_civic = civic_warrior_culture
			has_monthly_income = {
				resource = alloys
				value > 2
			}
		}
		AND = {
			NOT = { has_valid_civic = civic_warrior_culture }
			has_monthly_income = {
				resource = consumer_goods
				value > 2
			}
		}
	}
}

galactic_stock_exchange_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 5
	}
}

robot_assembly_plant_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 5
	}
	has_monthly_income = {
		resource = minerals
		value > 6
	}
}

precinct_house_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 2
	}
}

clinic_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 2
	}
	has_monthly_income = {
		resource = consumer_goods
		value > 2
	}
}

ministry_production_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 5
	}
}

institute_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 5
	}
}

machine_assembly_plant_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 2
	}
	has_monthly_income = {
		resource = minerals
		value > 3
	}
}

maintenance_depot_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 1
	}
}

sentinel_posts_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 2
	}
}

production_center_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 5
	}
	OR = {
		AND = {
			is_hive_empire = yes
			has_monthly_income = {
				resource = food
				value > 2
			}
			has_monthly_income = {
				resource = energy
				value > 7	# building upkeep + 2
			}
		}
		AND = {
			is_machine_empire = yes
			has_monthly_income = {
				resource = energy
				value > 8	# building upkeep + 3
			}
		}
		AND = {
			is_regular_empire = yes
			always = yes
		}
	}
}

hive_node_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 5
	}
	has_monthly_income = {
		resource = food
		value > 4
	}
}

uplink_node_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 5
	}
	has_monthly_income = {
		resource = minerals
		value > 4
	}
}

food_processing_facility_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 2
	}
}

luxury_residence_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 2
	}
}

chemical_plant_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 3
	}
	# Both the regular job and gestalt job has the same upkeep
	has_monthly_income = {
		resource = minerals
		value > 10
	}
}

refinery_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 3
	}
	# Both the regular job and gestalt job has the same upkeep
	has_monthly_income = {
		resource = minerals
		value > 10
	}
}

crystal_plant_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 3
	}
	# Both the regular job and gestalt job has the same upkeep
	has_monthly_income = {
		resource = minerals
		value > 10
	}
}

bureaucracy_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 2
	}
}

commercial_zone_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 2
	}
}

spawning_pool_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 2
	}
	has_monthly_income = {
		resource = food
		value > 5
	}
}

hive_warren_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 2
	}
}

resource_silo_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 1
	}
}

energy_grid_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 1
	}
}

drone_storage_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 2
	}
}

stronghold_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 1
	}
}

planetary_shield_generator_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 5
	}
}

supercomputer_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 5
	}
	has_monthly_income = {
		resource = minerals
		value > 6
	}
}

mineral_purification_plant_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 1
	}
}

overseer_homes_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 1
	}
}

slave_huts_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 1
	}
}

hydroponics_farm_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 2
	}
}

slave_processing_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 2
	}
}

temple_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 2
	}
}

enigmatic_modifier_jobs = { # Only pops with jobs affecting resources without modifiers qualify for enigmatic uplifting negative production modifiers.
	OR = {
		has_job = unemployed
		has_job = researcher
		has_job = foundry
		has_job = artisan
		has_job = culture_worker
		has_job = chemist
		has_job = translucer
		has_job = gas_refiner
		has_job = technician
		has_job = miner
		has_job = crystal_miner
		has_job = gas_extractor
		has_job = mote_harvester
		has_job = brain_drone
		has_job = calculator
		has_job = artisan_drone
		has_job = fabricator
		has_job = alloy_drone
		has_job = chemist_drone
		has_job = translucer_drone
		has_job = gas_refiner_drone
		has_job = crystal_mining_drone
		has_job = mote_harvesting_drone
		has_job = gas_extraction_drone
		has_job = mining_drone
		has_job = agri_drone
		has_job = technician_drone
	}
}

is_specialist_researcher = { #Specialist traits for recruitable leaders
	OR = {
		has_trait = leader_trait_expertise_biology
		has_trait = leader_trait_expertise_computing
		has_trait = leader_trait_expertise_field_manipulation
		has_trait = leader_trait_expertise_industry
		has_trait = leader_trait_expertise_materials
		has_trait = leader_trait_expertise_military_theory
		has_trait = leader_trait_expertise_new_worlds
		has_trait = leader_trait_expertise_particles
		has_trait = leader_trait_expertise_propulsion
		has_trait = leader_trait_expertise_psionics
		has_trait = leader_trait_expertise_statecraft
		has_trait = leader_trait_expertise_voidcraft
	}
}

is_special_colony_type = {
	OR = {
		has_modifier = penal_colony
		has_modifier = resort_colony
		has_modifier = slave_colony
	}
}

scion_has_techs = {
	AND = {
		has_technology = tech_alloys_1
		has_technology = tech_mineral_purification_2
		has_technology = tech_space_defense_station_improvement
		has_technology = tech_battleships
		has_technology = tech_battleship_hull_2
		has_technology = tech_space_science_2
		has_technology = tech_self_aware_logic
		has_technology = tech_antimatter_power
		has_technology = tech_combat_computers_autonomous
		has_technology = tech_jump_drive_1
		has_technology = tech_eco_simulation
		has_technology = tech_society_2
		has_technology = tech_colonization_4
		has_technology = tech_climate_restoration
		has_technology = tech_ascension_theory
	}
}

lithoids_portrait = {
	OR = {
		species_portrait = lith1
		species_portrait = lith2
		species_portrait = lith3
		species_portrait = lith4
		species_portrait = lith5
		species_portrait = lith6
		species_portrait = lith7
		species_portrait = lith8
		species_portrait = lith9
		species_portrait = lith10
		species_portrait = lith11
		species_portrait = lith12
		species_portrait = lith13
		species_portrait = lith14
		species_portrait = lith15
	}
}

is_owner_ethic_pop_faction = {
	OR = {
		AND = {
			is_pop_faction_type = prosperity
			owner = { is_pacifist = yes }
		}
		AND = {
			is_pop_faction_type = progressive
			owner = { is_egalitarian = yes }
		}
		AND = {
			is_pop_faction_type = imperialist
			owner = { is_militarist = yes }
		}
		AND = {
			OR = {
				is_pop_faction_type = isolationist
				is_pop_faction_type = supremacist
			}
			owner = { is_xenophobe = yes }
		}
		AND = {
			is_pop_faction_type = technologist
			owner = { is_materialist = yes }
		}
		AND = {
			is_pop_faction_type = totalitarian
			owner = { is_authoritarian = yes }
		}
		AND = {
			is_pop_faction_type = traditionalist
			owner = { is_spiritualist = yes }
		}
		AND = {
			is_pop_faction_type = xenoist
			owner = { is_xenophile = yes }
		}
	}
}