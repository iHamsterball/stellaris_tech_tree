### STNH 2.1.1 Compatible ###

#	Example:
#
#	example_effect = {
#		add_energy = -100
#	}
#
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}
#

# Debug scope printing
print_scope_effect = {
	log = "------------------------------"
	log = "- Printing the current scopes (trigger) -"
	log = "- This: [This.GetName]"
	log = "- Root: [Root.GetName]"
	log = "- Prev: [Prev.GetName]"
	log = "- PrevPrev: [Prev.Prev.GetName]"
	log = "- PrevPrevPrev: [Prev.Prev.Prev.GetName]"
	log = "- PrevPrevPrevPrev: [Prev.Prev.Prev.Prev.GetName]"
	log = "- From: [From.GetName]"
	log = "- FromFrom: [From.From.GetName]"
	log = "- FromFromFrom: [From.From.From.GetName]"
	log = "- FromFromFromFrom: [From.From.From.From.GetName]"
	log = "- This's Solar System: [This.GetStarName]"
	log = "- This's Planet: [This.Planet.GetName]"
	log = "- This's Sector: [This.Sector.GetName]"
	log = "- Root's Solar System: [Root.GetStarName]"
	log = "- Root's Owner's Name: [Root.Owner.GetName]"
	log = "- Root's Owner's Capital's Name: [Root.Owner.Capital.GetName]"
	log = "------------------------------"
}

# Checks if Crystalline Entity country (global event target) exists
# Creates the country and saves it if it does not
create_crystal_country = {
	if = {
		limit = {
			NOT = {
				exists = event_target:crystal_country
			}
		}
		create_country = {
			name = "NAME_Prism"
			type = crystal
			flag = {
				icon = {
					category = "zoological"
					file = "flag_zoological_1.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors={
					"black"
					"black"
					"null"
					"null"
				}
			}
		}
		last_created_country = {
			save_global_event_target_as = crystal_country
		}
	}
}

# Checks if Void Cloud country (global event target) exists
# Creates the country and saves it if it does not
create_cloud_country = {
	if = {
		limit = { NOT = { exists = event_target:cloud_country } }
		create_country = {
			name = "NAME_Enigmatic_Energy"
			type = cloud
			flag = {
				icon = {
					category = "zoological"
					file = "flag_zoological_1.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors={
					"black"
					"black"
					"null"
					"null"
				}
			}
		}
		last_created_country = {
			save_global_event_target_as = cloud_country
		}
	}
}

# Checks if Space Amoeba country (global event target) exists
# Creates the country and saves it if it does not
create_amoeba_country = {
	if = {
		limit = { NOT = { exists = event_target:amoeba_country } }
		create_country = {
			name = "NAME_Spaceborne_Organics"
			type = amoeba
			flag = {
				icon = {
					category = "zoological"
					file = "flag_zoological_1.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors={
					"black"
					"black"
					"null"
					"null"
				}
			}
		}
		last_created_country = {
			save_global_event_target_as = amoeba_country
		}
	}
}

# Checks if Mining Drone country (global event target) exists
# Creates the country and saves it if it does not
create_drone_country = {
	if = {
		limit = { NOT = { exists = event_target:drone_country } }
		create_country = {
			name = "NAME_Mineral_Extraction_Operation"
			type = drone
			flag = {
				icon = {
					category = "zoological"
					file = "flag_zoological_1.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors={
					"black"
					"black"
					"null"
					"null"
				}
			}
		}
		last_created_country = {
			save_global_event_target_as = drone_country
			set_graphical_culture = ancient_drone_01
		}
	}
}

# Checks if Tiyanki country (global event target) exists
# Creates the country and saves it if it does not
create_tiyanki_country = {
	if = {
		limit = { NOT = { exists = event_target:tiyanki_country } }
		create_country = {
			name = "NAME_Placid_Leviathans"
			type = tiyanki
			flag = {
				icon = {
					category = "zoological"
					file = "flag_zoological_1.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors={
					"black"
					"black"
					"null"
					"null"
				}
			}
		}
		last_created_country = {
			save_global_event_target_as = tiyanki_country
		}
	}
}

# Checks if Pirate country (global event target) exists
# Creates the country and saves it if it does not
create_pirate_country = {
	if = {
		limit = {
			NOT = {
				exists = event_target:pirate_country
			}
		}
		create_country = {
			name = "NAME_Privateers"
			name_list = "PRT1"
			species = random
			type = pirate
			flag = {
				background = {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors ={
					"black"
					"black"
					"null"
					"null"
				}
			}
		}
		last_created_country = {
			save_global_event_target_as = pirate_country
			randomize_flag_symbol = "pirate"
		}
	}
}

### Changes a pops ethic one level to the opposite
##Checks for the following flags, make sure to set them before you run the effect:
#ethic_diverge_from_militarist
#ethic_diverge_from_pacifist
#ethic_diverge_from_materialist
#ethic_diverge_from_spiritualist
#ethic_diverge_from_authoritarian
#ethic_diverge_from_egalitarian
##Also check pops for the pop_changed_ethics flag so you don't redo it on the same pop again.
pop_diverge_ethic = {
	if = {
		limit = {
			has_ethic = ethic_militarist
			has_pop_flag = ethic_diverge_from_militarist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_remove_ethic = ethic_militarist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			NOT = {
				has_ethic = ethic_militarist
			}
			has_pop_flag = ethic_diverge_from_militarist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_change_ethic = ethic_pacifist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			has_ethic = ethic_pacifist
			has_pop_flag = ethic_diverge_from_pacifist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_remove_ethic = ethic_pacifist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			NOT = {
				has_ethic = ethic_pacifist
			}
			has_pop_flag = ethic_diverge_from_pacifist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_change_ethic = ethic_militarist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			has_ethic = ethic_materialist
			has_pop_flag = ethic_diverge_from_materialist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_remove_ethic = ethic_materialist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			NOT = {
				has_ethic = ethic_materialist
			}
			has_pop_flag = ethic_diverge_from_materialist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_change_ethic = ethic_pacifist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			has_ethic = ethic_spiritualist
			has_pop_flag = ethic_diverge_from_spiritualist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_remove_ethic = ethic_spiritualist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			NOT = {
				has_ethic = ethic_spiritualist
			}
			has_pop_flag = ethic_diverge_from_spiritualist
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_change_ethic = ethic_militarist
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			has_ethic = ethic_authoritarian
			has_pop_flag = ethic_diverge_from_authoritarian
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_remove_ethic = ethic_authoritarian
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			NOT = {
				has_ethic = ethic_authoritarian
			}
			has_pop_flag = ethic_diverge_from_authoritarian
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_change_ethic = ethic_egalitarian
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			has_ethic = ethic_egalitarian
			has_pop_flag = ethic_diverge_from_egalitarian
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_remove_ethic = ethic_egalitarian
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
	if = {
		limit = {
			NOT = {
				has_ethic = ethic_egalitarian
			}
			has_pop_flag = ethic_diverge_from_egalitarian
			NOT = { has_pop_flag = pop_changed_ethics }
		}
		pop_change_ethic = ethic_authoritarian
		set_timed_pop_flag = { flag = pop_changed_ethics days = 7 }
	}
}


# Adds a trait to a leader
add_random_leader_trait = {
	if = { #Is a science ship commander
		limit = {
			leader_class = scientist
			NOR = {
				is_researching_area = society
				is_researching_area = engineering
				is_researching_area = physics
			}
		}
		while = {
			limit = {
				NOT = { has_leader_flag = has_gained_trait }
			}
			random_list = {
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_adaptable }
							NOT = { owner = { has_ethic = "ethic_gestalt_consciousness" } }
						}
						add_trait = leader_trait_adaptable
						set_timed_leader_flag = { flag = gained_leader_trait_adaptable days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_resilient }
							NOT = { owner = { has_ethic = "ethic_gestalt_consciousness" } }
						}
						add_trait = leader_trait_resilient
						set_timed_leader_flag = { flag = gained_leader_trait_resilient days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOR = { 
								has_trait = leader_trait_stubborn 
								has_trait = leader_trait_rigid_programming
								owner = { has_authority = "auth_hive_mind" }
							}
						}
						if = {
							limit = {
								owner = {
									NOT = { has_authority = "auth_machine_intelligence" }
								}
							}
							add_trait = leader_trait_stubborn
							set_timed_leader_flag = { flag = gained_leader_trait_stubborn days = 7 }
						}
						if = {
							limit = {
								owner = { has_authority = "auth_machine_intelligence" }
							}
							add_trait = leader_trait_rigid_programming
							set_timed_leader_flag = { flag = gained_leader_trait_rigid_programming days = 7 }
						}
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_substance_abuser }
							NOT = { owner = { has_ethic = "ethic_gestalt_consciousness" } }
						}
						add_trait = leader_trait_substance_abuser
						set_timed_leader_flag = { flag = gained_leader_trait_substance_abuser days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_arrested_development  }
						}
						add_trait = leader_trait_arrested_development
						set_timed_leader_flag = { flag = gained_leader_trait_arrested_development days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_meticulous }
						}
						add_trait = leader_trait_meticulous
						set_timed_leader_flag = { flag = gained_leader_trait_meticulous days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_spark_of_genius }
						}
						add_trait = leader_trait_spark_of_genius
						set_timed_leader_flag = { flag = gained_leader_trait_spark_of_genius days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_carefree }
						}
						add_trait = leader_trait_carefree
						set_timed_leader_flag = { flag = gained_leader_trait_carefree days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOR = { 
								has_trait = leader_trait_roamer 
								has_trait = leader_trait_cataloger
							}
						}
						if = {
							limit = {
								owner = {
									NOT = { has_authority = "auth_machine_intelligence" }
								}
							}
							add_trait = leader_trait_roamer 
							set_timed_leader_flag = { flag = gained_leader_trait_roamer days = 7 }
						}
						if = {
							limit = {
								owner = { has_authority = "auth_machine_intelligence" }
							}
							add_trait = leader_trait_cataloger
							set_timed_leader_flag = { flag = gained_leader_trait_cataloger days = 7 }
						}
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_archaeologist }
						}
						add_trait = leader_trait_archaeologist
						set_timed_leader_flag = { flag = gained_leader_trait_archaeologist days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_maniacal }
						}
						add_trait = leader_trait_maniacal
						set_timed_leader_flag = { flag = gained_leader_trait_maniacal days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_custom_AI_assistant }
							NOT = { owner = { has_ethic = "ethic_gestalt_consciousness" } }
						}
						add_trait = leader_trait_custom_AI_assistant
						set_timed_leader_flag = { flag = gained_leader_trait_custom_AI_assistant days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_expertise_materials }
						}
						add_trait = leader_trait_expertise_materials
						set_timed_leader_flag = { flag = gained_leader_trait_expertise_materials days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_expertise_propulsion }
						}
						add_trait = leader_trait_expertise_propulsion
						set_timed_leader_flag = { flag = gained_leader_trait_expertise_propulsion days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_expertise_voidcraft }
						}
						add_trait = leader_trait_expertise_voidcraft
						set_timed_leader_flag = { flag = gained_leader_trait_expertise_voidcraft days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_expertise_industry }
						}
						add_trait = leader_trait_expertise_industry
						set_timed_leader_flag = { flag = gained_leader_trait_expertise_industry days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_expertise_field_manipulation }
						}
						add_trait = leader_trait_expertise_field_manipulation
						set_timed_leader_flag = { flag = gained_leader_trait_expertise_field_manipulation days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_expertise_particles }
						}
						add_trait = leader_trait_expertise_particles
						set_timed_leader_flag = { flag = gained_leader_trait_expertise_particles days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_expertise_computing }
						}
						add_trait = leader_trait_expertise_computing
						set_timed_leader_flag = { flag = gained_leader_trait_expertise_computing days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOR = {
								has_trait = leader_trait_expertise_psionics
								owner = { has_ethic = ethic_gestalt_consciousness }
								species = { has_trait = trait_mechanical }
							}
						}
						add_trait = leader_trait_expertise_psionics
						set_timed_leader_flag = { flag = gained_leader_trait_expertise_psionics days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_expertise_new_worlds }
						}
						add_trait = leader_trait_expertise_new_worlds
						set_timed_leader_flag = { flag = gained_leader_trait_expertise_new_worlds days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_expertise_statecraft }
						}
						add_trait = leader_trait_expertise_statecraft
						set_timed_leader_flag = { flag = gained_leader_trait_expertise_statecraft days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_expertise_biology }
						}
						add_trait = leader_trait_expertise_biology
						set_timed_leader_flag = { flag = gained_leader_trait_expertise_biology days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_expertise_military_theory }
						}
						add_trait = leader_trait_expertise_military_theory
						set_timed_leader_flag = { flag = gained_leader_trait_expertise_military_theory days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_paranoid }
						}
						add_trait = leader_trait_paranoid
						set_timed_leader_flag = { flag = gained_leader_trait_paranoid days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
			}
		}
		owner = { country_event = { id = leader.21} }
	}
	if = {
		limit = {
			leader_class = admiral
		}
		while = {
			limit = {
				NOT = { has_leader_flag = has_gained_trait }
			}
			random_list = {
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_adaptable }
							NOT = { owner = { has_ethic = "ethic_gestalt_consciousness" } }
						}
						add_trait = leader_trait_adaptable
						set_timed_leader_flag = { flag = gained_leader_trait_adaptable days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOR = {
								has_trait = leader_trait_resilient
								owner = { has_ethic = ethic_gestalt_consciousness }
								species = { has_trait = trait_mechanical }
							}
						}
						add_trait = leader_trait_resilient
						set_timed_leader_flag = { flag = gained_leader_trait_resilient days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOR = { 
								has_trait = leader_trait_stubborn 
								has_trait = leader_trait_rigid_programming
								owner = { has_authority = "auth_hive_mind" }
							}
						}
						if = {
							limit = {
								owner = {
									NOT = { has_authority = "auth_machine_intelligence" }
								}
							}
							add_trait = leader_trait_stubborn
							set_timed_leader_flag = { flag = gained_leader_trait_stubborn days = 7 }
						}
						if = {
							limit = {
								owner = { has_authority = "auth_machine_intelligence" }
							}
							add_trait = leader_trait_rigid_programming
							set_timed_leader_flag = { flag = gained_leader_trait_rigid_programming days = 7 }
						}
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_substance_abuser }
							NOT = { owner = { has_ethic = "ethic_gestalt_consciousness" } }
						}
						add_trait = leader_trait_substance_abuser
						set_timed_leader_flag = { flag = gained_leader_trait_substance_abuser days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_arrested_development  }
						}
						add_trait = leader_trait_arrested_development
						set_timed_leader_flag = { flag = gained_leader_trait_arrested_development days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_trickster }
						}
						add_trait = leader_trait_trickster
						set_timed_leader_flag = { flag = gained_leader_trait_trickster days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOR = { 
								has_trait = leader_trait_fleet_logistician
								has_trait = leader_trait_maintenance_loop
							}
						}
						if = {
							limit = {
								owner = {
									NOT = { has_authority = "auth_machine_intelligence" }
								}
							}
							add_trait = leader_trait_fleet_logistician
							set_timed_leader_flag = { flag = gained_leader_trait_fleet_logistician days = 7 }
						}
						if = {
							limit = {
								owner = { has_authority = "auth_machine_intelligence" }
							}
							add_trait = leader_trait_maintenance_loop
							set_timed_leader_flag = { flag = gained_leader_trait_maintenance_loop days = 7 }
						}
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_engineer }
						}
						add_trait = leader_trait_engineer
						set_timed_leader_flag = { flag = gained_leader_trait_engineer days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_aggressive }
						}
						add_trait = leader_trait_aggressive
						set_timed_leader_flag = { flag = gained_leader_trait_aggressive days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_cautious }
						}
						add_trait = leader_trait_cautious
						set_timed_leader_flag = { flag = gained_leader_trait_cautious days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_scout }
						}
						add_trait = leader_trait_scout
						set_timed_leader_flag = { flag = gained_leader_trait_scout days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_unyielding }
						}
						add_trait = leader_trait_unyielding
						set_timed_leader_flag = { flag = gained_leader_trait_unyielding days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_gale_speed }
						}
						add_trait = leader_trait_gale_speed
						set_timed_leader_flag = { flag = gained_leader_trait_gale_speed days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_lethargic }
						}
						add_trait = leader_trait_lethargic
						set_timed_leader_flag = { flag = gained_leader_trait_lethargic days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
			}
		}
		owner = { country_event = { id = leader.22} }
	}
	if = {
		limit = {
			leader_class = governor
		}
		while = {
			limit = {
				NOT = { has_leader_flag = has_gained_trait }
			}
			random_list = {
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_adaptable }
							NOT = { owner = { has_ethic = "ethic_gestalt_consciousness" } }
						}
						add_trait = leader_trait_adaptable
						set_timed_leader_flag = { flag = gained_leader_trait_adaptable days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_resilient }
							NOT = { owner = { has_ethic = "ethic_gestalt_consciousness" } }
						}
						add_trait = leader_trait_resilient
						set_timed_leader_flag = { flag = gained_leader_trait_resilient days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOR = { 
								has_trait = leader_trait_stubborn 
								has_trait = leader_trait_rigid_programming
								owner = { has_authority = "auth_hive_mind" }
							}
						}
						if = {
							limit = {
								owner = {
									NOT = { has_authority = "auth_machine_intelligence" }
								}
							}
							add_trait = leader_trait_stubborn
							set_timed_leader_flag = { flag = gained_leader_trait_stubborn days = 7 }
						}
						if = {
							limit = {
								owner = { has_authority = "auth_machine_intelligence" }
							}
							add_trait = leader_trait_rigid_programming
							set_timed_leader_flag = { flag = gained_leader_trait_rigid_programming days = 7 }
						}
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_substance_abuser }
							NOT = { owner = { has_ethic = "ethic_gestalt_consciousness" } }
						}
						add_trait = leader_trait_substance_abuser
						set_timed_leader_flag = { flag = gained_leader_trait_substance_abuser days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_arrested_development  }
						}
						add_trait = leader_trait_arrested_development
						set_timed_leader_flag = { flag = gained_leader_trait_arrested_development days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOR = {
								has_trait = leader_trait_iron_fist
								owner = { allows_slavery = no }
								owner = { has_authority = "auth_machine_intelligence" }
							}
						}
						add_trait = leader_trait_iron_fist
						set_timed_leader_flag = { flag = gained_leader_trait_iron_fist days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_architectural_interest }
						}
						add_trait = leader_trait_architectural_interest
						set_timed_leader_flag = { flag = gained_leader_trait_architectural_interest days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOR = { 
								has_trait = leader_trait_intellectual 
								has_trait = leader_trait_analytical
							}
						}
						if = {
							limit = {
								owner = {
									NOT = { has_authority = "auth_machine_intelligence" }
								}
							}
							add_trait = leader_trait_intellectual 
							set_timed_leader_flag = { flag = gained_leader_trait_intellectual days = 7 }
						}
						if = {
							limit = {
								owner = { has_authority = "auth_machine_intelligence" }
							}
							add_trait = leader_trait_analytical
							set_timed_leader_flag = { flag = gained_leader_trait_analytical days = 7 }
						}
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOR = { 
								has_trait = leader_trait_environmental_engineer 
								has_trait = leader_trait_bulldozer
							}
						}
						if = {
							limit = {
								owner = {
									NOT = { has_authority = "auth_machine_intelligence" }
								}
							}
							add_trait = leader_trait_environmental_engineer 
							set_timed_leader_flag = { flag = gained_leader_trait_environmental_engineer days = 7 }
						}
						if = {
							limit = {
								owner = { has_authority = "auth_machine_intelligence" }
							}
							add_trait = leader_trait_bulldozer
							set_timed_leader_flag = { flag = gained_leader_trait_bulldozer days = 7 }
						}
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
			}
		}
		owner = { country_event = { id = leader.23} }
	}
	if = {
		limit = {
			leader_class = general
		}
		while = {
			limit = {
				NOT = { has_leader_flag = has_gained_trait }
			}
			random_list = {
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_adaptable }
							NOT = { owner = { has_ethic = "ethic_gestalt_consciousness" } }
						}
						add_trait = leader_trait_adaptable
						set_timed_leader_flag = { flag = gained_leader_trait_adaptable days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_resilient }
							NOT = { owner = { has_ethic = "ethic_gestalt_consciousness" } }
						}
						add_trait = leader_trait_resilient
						set_timed_leader_flag = { flag = gained_leader_trait_resilient days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOR = { 
								has_trait = leader_trait_stubborn 
								has_trait = leader_trait_rigid_programming
								owner = { has_authority = "auth_hive_mind" }
							}
						}
						if = {
							limit = {
								owner = {
									NOT = { has_authority = "auth_machine_intelligence" }
								}
							}
							add_trait = leader_trait_stubborn
							set_timed_leader_flag = { flag = gained_leader_trait_stubborn days = 7 }
						}
						if = {
							limit = {
								owner = { has_authority = "auth_machine_intelligence" }
							}
							add_trait = leader_trait_rigid_programming
							set_timed_leader_flag = { flag = gained_leader_trait_rigid_programming days = 7 }
						}
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_substance_abuser }
							NOT = { owner = { has_ethic = "ethic_gestalt_consciousness" } }
						}
						add_trait = leader_trait_substance_abuser
						set_timed_leader_flag = { flag = gained_leader_trait_substance_abuser days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_arrested_development  }
						}
						add_trait = leader_trait_arrested_development
						set_timed_leader_flag = { flag = gained_leader_trait_arrested_development days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							owner = {
								NOT = { has_authority = "auth_machine_intelligence" }
							}						
							NOT = { has_trait = leader_trait_butcher }
							NOT = { has_trait = leader_trait_restrained }						
						}
						add_trait = leader_trait_restrained
						set_timed_leader_flag = { flag = gained_leader_trait_restrained days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOR = { 
								has_trait = leader_trait_charismatic 
								has_trait = leader_trait_demoralizer
							}
						}
						if = {
							limit = {
								owner = {
									NOT = { has_authority = "auth_machine_intelligence" }
								}
							}
							add_trait = leader_trait_charismatic 
							set_timed_leader_flag = { flag = gained_leader_trait_charismatic days = 7 }
						}
						if = {
							limit = {
								owner = { has_authority = "auth_machine_intelligence" }
							}
							add_trait = leader_trait_demoralizer
							set_timed_leader_flag = { flag = gained_leader_trait_demoralizer days = 7 }
						}
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_butcher }
							NOT = { has_trait = leader_trait_restrained }
						}
						add_trait = leader_trait_butcher
						set_timed_leader_flag = { flag = gained_leader_trait_butcher days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOR = { 
								has_trait = leader_trait_glory_seeker
								has_trait = leader_trait_demoralizer
							}
						}
						if = {
							limit = {
								owner = {
									NOT = { has_authority = "auth_machine_intelligence" }
								}
							}
							add_trait = leader_trait_glory_seeker
							set_timed_leader_flag = { flag = gained_leader_trait_glory_seeker days = 7 }
						}
						if = {
							limit = {
								owner = { has_authority = "auth_machine_intelligence" }
							}
							add_trait = leader_trait_demoralizer
							set_timed_leader_flag = { flag = gained_leader_trait_demoralizer days = 7 }
						}
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOR = { 
								has_trait = leader_trait_armchair_commander 
								has_trait = leader_trait_erratic_morality_core
							}
						}
						if = {
							limit = {
								owner = {
									NOT = { has_authority = "auth_machine_intelligence" }
								}
							}
							add_trait = leader_trait_armchair_commander 
							set_timed_leader_flag = { flag = gained_leader_trait_armchair_commander days = 7 }
						}
						if = {
							limit = {
								owner = { has_authority = "auth_machine_intelligence" }
							}
							add_trait = leader_trait_erratic_morality_core
							set_timed_leader_flag = { flag = gained_leader_trait_erratic_morality_core days = 7 }
						}
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOR = { 
								has_trait = leader_trait_army_logistician 
								has_trait = leader_trait_parts_cannibalizer
							}
						}
						if = {
							limit = {
								owner = {
									NOT = { has_authority = "auth_machine_intelligence" }
								}
							}
							add_trait = leader_trait_army_logistician 
							set_timed_leader_flag = { flag = gained_leader_trait_army_logistician days = 7 }
						}
						if = {
							limit = {
								owner = { has_authority = "auth_machine_intelligence" }
							}
							add_trait = leader_trait_parts_cannibalizer
							set_timed_leader_flag = { flag = gained_leader_trait_parts_cannibalizer days = 7 }
						}
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
			}
		}
		owner = { country_event = { id = leader.24} }
	}
	if = {
		limit = {
			leader_class = ruler
		}
		while = {
			limit = {
				NOT = { has_leader_flag = has_gained_trait }
			}
			random_list = {
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_adaptable }
						}
						add_trait = leader_trait_adaptable
						set_timed_leader_flag = { flag = gained_leader_trait_adaptable days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_resilient }
						}
						add_trait = leader_trait_resilient
						set_timed_leader_flag = { flag = gained_leader_trait_resilient days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOR = { 
								has_trait = leader_trait_stubborn 
								has_trait = leader_trait_rigid_programming
								owner = { has_authority = "auth_hive_mind" }
							}
						}
						if = {
							limit = {
								owner = {
									NOT = { has_authority = "auth_machine_intelligence" }
								}
							}
							add_trait = leader_trait_stubborn
							set_timed_leader_flag = { flag = gained_leader_trait_stubborn days = 7 }
						}
						if = {
							limit = {
								owner = { has_authority = "auth_machine_intelligence" }
							}
							add_trait = leader_trait_rigid_programming
							set_timed_leader_flag = { flag = gained_leader_trait_rigid_programming days = 7 }
						}
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_substance_abuser }
						}
						add_trait = leader_trait_substance_abuser
						set_timed_leader_flag = { flag = gained_leader_trait_substance_abuser days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_arrested_development }
						}
						add_trait = leader_trait_arrested_development
						set_timed_leader_flag = { flag = gained_leader_trait_arrested_development days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_corvette_focus }
						}
						add_trait = trait_ruler_corvette_focus
						set_timed_leader_flag = { flag = gained_trait_ruler_corvette_focus days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_destroyer_focus }
						}
						add_trait = trait_ruler_destroyer_focus
						set_timed_leader_flag = { flag = gained_trait_ruler_destroyer_focus days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_cruiser_focus }
						}
						add_trait = trait_ruler_cruiser_focus
						set_timed_leader_flag = { flag = gained_trait_ruler_cruiser_focus days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_battleship_focus }
						}
						add_trait = trait_ruler_battleship_focus
						set_timed_leader_flag = { flag = gained_trait_ruler_battleship_focus days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_recruiter }
						}
						add_trait = trait_ruler_recruiter
						set_timed_leader_flag = { flag = gained_trait_ruler_recruiter days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_fortifier }
						}
						add_trait = trait_ruler_fortifier
						set_timed_leader_flag = { flag = gained_trait_ruler_fortifier days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_logistic_understanding }
						}
						add_trait = trait_ruler_logistic_understanding
						set_timed_leader_flag = { flag = gained_trait_ruler_logistic_understanding days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_military_pioneer }
						}
						add_trait = trait_ruler_military_pioneer
						set_timed_leader_flag = { flag = gained_trait_ruler_military_pioneer days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_warlike }
						}
						add_trait = trait_ruler_warlike
						set_timed_leader_flag = { flag = gained_trait_ruler_warlike days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_architectural_sense }
						}
						add_trait = trait_ruler_architectural_sense
						set_timed_leader_flag = { flag = gained_trait_ruler_architectural_sense days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_frontier_spirit }
						}
						add_trait = trait_ruler_frontier_spirit
						set_timed_leader_flag = { flag = gained_trait_ruler_frontier_spirit days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_world_shaper }
						}
						add_trait = trait_ruler_world_shaper
						set_timed_leader_flag = { flag = gained_trait_ruler_world_shaper days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_home_in_the_sky }
						}
						add_trait = trait_ruler_home_in_the_sky
						set_timed_leader_flag = { flag = gained_trait_ruler_home_in_the_sky days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_industrialist }
						}
						add_trait = trait_ruler_industrialist
						set_timed_leader_flag = { flag = gained_trait_ruler_industrialist days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				100 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_eye_for_talent }
						}
						add_trait = trait_ruler_eye_for_talent
						set_timed_leader_flag = { flag = gained_trait_ruler_eye_for_talent days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_deep_connections }
						}
						add_trait = trait_ruler_deep_connections
						set_timed_leader_flag = { flag = gained_trait_ruler_deep_connections days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_champion_of_the_people }
						}
						add_trait = trait_ruler_champion_of_the_people
						set_timed_leader_flag = { flag = gained_trait_ruler_champion_of_the_people days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_expansionist }
						}
						add_trait = trait_ruler_expansionist
						set_timed_leader_flag = { flag = gained_trait_ruler_expansionist days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_fertility_preacher }
						}
						add_trait = trait_ruler_fertility_preacher
						set_timed_leader_flag = { flag = gained_trait_ruler_fertility_preacher days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_investor }
						}
						add_trait = trait_ruler_investor
						set_timed_leader_flag = { flag = gained_trait_ruler_investor days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = trait_ruler_explorer }
						}
						add_trait = trait_ruler_explorer
						set_timed_leader_flag = { flag = gained_trait_ruler_explorer days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
				5 = {
					if = {
						limit = {
							NOT = { has_trait = leader_trait_fleet_organizer }
						}
						add_trait = leader_trait_fleet_organizer
						set_timed_leader_flag = { flag = gained_leader_trait_fleet_organizer days = 7 }
						set_timed_leader_flag = { flag = has_gained_trait days = 7 }
					}
				}
			}
		}
		owner = { country_event = { id = leader.25} }
	}
}

# Change planet class one step up in temperature
increase_planet_temperature = {
	if = {
		limit = {
			is_planet_class = pc_barren
		}
		change_pc = pc_molten
		reroll_planet = yes
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_desert
		}
		change_pc = pc_molten
		reroll_planet = yes
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_arid
		}
		change_pc = pc_barren
		reroll_planet = yes
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_savannah
		}
		change_pc = pc_barren
		reroll_planet = yes
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_ocean
		}
		change_pc = pc_desert
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_continental
		}
		change_pc = pc_arid
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_tropical
		}
		change_pc = pc_savannah
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_arctic
		}
		change_pc = pc_ocean
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_alpine
		}
		change_pc = pc_continental
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_tundra
		}
		change_pc = pc_tropical
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_barren_cold
		}
		change_pc = pc_tundra
		reroll_planet = yes
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_frozen
		}
		change_pc = pc_arctic
		reroll_planet = yes
		clear_blockers = yes
	}
}

# Change planet class one step down in temperature
decrease_planet_temperature = {
	if = {
		limit = {
			is_planet_class = pc_molten
		}
		change_pc = pc_desert
		reroll_planet = yes
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_barren
		}
		change_pc = pc_arid
		reroll_planet = yes
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_desert
		}
		change_pc = pc_ocean
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_arid
		}
		change_pc = pc_continental
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_savannah
		}
		change_pc = pc_tropical
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_ocean
		}
		change_pc = pc_arctic
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_continental
		}
		change_pc = pc_alpine
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_tropical
		}
		change_pc = pc_tundra
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_arctic
		}
		change_pc = pc_frozen
		reroll_planet = yes
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_alpine
		}
		change_pc = pc_frozen
		reroll_planet = yes
		clear_blockers = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_tundra
		}
		random_list = {
			50 = { change_pc = pc_frozen }
			50 = { change_pc = pc_barren_cold }
		}
		reroll_planet = yes
		clear_blockers = yes
	}
}

spawn_sun_temperature_effect = {
	if = {
		limit = {
			OR = {
				is_planet_class = pc_g_star
			}
		}
		create_ambient_object = {
			location = this
			type = yellow_sun_grow_particle_object
			duration = 1
			
			use_3d_location= yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 360 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 0.01
		}
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_k_star
				is_planet_class = pc_m_star
			}
		}
		create_ambient_object = {
			location = this
			type = red_sun_grow_particle_object
			duration = 1
			
			use_3d_location= yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 360 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 0.01
		}
	}
	else_if = {
		limit = {
			OR = {
				is_planet_class = pc_b_star
				is_planet_class = pc_a_star
				is_planet_class = pc_f_star
				is_planet_class = pc_pulsar
				is_planet_class = pc_neutron_star
			}
		}
		create_ambient_object = {
			location = this
			type = blue_sun_grow_particle_object
			duration = 1
			
			use_3d_location= yes
			
			entity_offset = { min = 0 max = 0 }
			entity_offset_angle = { min = 0 max = 360 }
			entity_offset_height = { min = 0 max = 0 }
			
			entity_scale_to_size = yes
			scale = 0.01
		}
	}
}

spawn_planet_temperature_effect = {
	create_ambient_object = {
		location = this
		type = planet_heat_up_particle_object
		duration = 30
		
		use_3d_location= yes
		base_angle_towards = star
		entity_face_object = star
		
		entity_offset = { min = 0 max = 0 }
		
		entity_scale_to_size = yes
		scale = 0.15
	}
}

spawn_planet_temperature_effect2 = {
	create_ambient_object = {
		location = this
		#type = planet_heat_up_particle_object
		type = blue_sun_grow_particle_object
		duration = 3
		
		use_3d_location= yes
		base_angle_towards = star
		entity_face_object = star
		
		entity_offset = { min = 0 max = 0 }
		
		entity_scale_to_size = yes
		scale = 0.03
	}
}

end_curator_chain = {
	if = {
		limit = {
			has_event_chain = curator_poi_chain
			NOR = {
				has_point_of_interest = { poi = curator_poi_dragon }
				has_point_of_interest = { poi = curator_poi_technosphere }
				has_point_of_interest = { poi = curator_poi_wraith }
				has_point_of_interest = { poi = curator_poi_horror }
				has_point_of_interest = { poi = curator_poi_fortress }
				has_point_of_interest = { poi = curator_poi_hiver }
				has_point_of_interest = { poi = curator_poi_stellarite }
				has_point_of_interest = { poi = curator_poi_dreadnought }
			}
		}
		end_event_chain = curator_poi_chain
	}
}

make_intelligent = {
	if = {
		limit = { pop_has_trait = trait_intelligent }
	}
	else = {
		modify_species = {
			species = this
			add_trait = trait_intelligent
		}
	}
}

make_resilient = {
	if = {
		limit = {
			pop_has_trait = trait_resilient
		}
	}
	else = {
		modify_species = {
			species = this
			add_trait = trait_resilient
		}
	}
}

 ##create a subspecies with the Intelligent and Fanatically Pacifist traits, and remove Militarist or Fanatically Militarist
make_unleashed_messenger = {
}

make_leashed_messenger = {
}

wipe_pop_ethos = {
	if = {
		limit = { pop_has_ethic = ethic_fanatic_egalitarian }
		pop_remove_ethic = ethic_fanatic_egalitarian
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_authoritarian }
		pop_remove_ethic = ethic_fanatic_authoritarian
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_pacifist }
		pop_remove_ethic = ethic_fanatic_pacifist
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_militarist }
		pop_remove_ethic = ethic_fanatic_militarist
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_xenophobe }
		pop_remove_ethic = ethic_fanatic_xenophobe
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_xenophile }
		pop_remove_ethic = ethic_fanatic_xenophile
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_materialist }
		pop_remove_ethic = ethic_fanatic_materialist
	}
	if = {
		limit = { pop_has_ethic = ethic_fanatic_spiritualist }
		pop_remove_ethic = ethic_fanatic_spiritualist
	}
	if = {
		limit = { pop_has_ethic = ethic_egalitarian }
		pop_remove_ethic = ethic_egalitarian
	}
	if = {
		limit = { pop_has_ethic = ethic_authoritarian }
		pop_remove_ethic = ethic_authoritarian
	}
	if = {
		limit = { pop_has_ethic = ethic_pacifist }
		pop_remove_ethic = ethic_pacifist
	}
	if = {
		limit = { pop_has_ethic = ethic_militarist }
		pop_remove_ethic = ethic_militarist
	}
	if = {
		limit = { pop_has_ethic = ethic_xenophobe }
		pop_remove_ethic = ethic_xenophobe
	}
	if = {
		limit = { pop_has_ethic = ethic_xenophile }
		pop_remove_ethic = ethic_xenophile
	}
	if = {
		limit = { pop_has_ethic = ethic_materialist }
		pop_remove_ethic = ethic_materialist
	}
	if = {
		limit = { pop_has_ethic = ethic_spiritualist }
		pop_remove_ethic = ethic_spiritualist
	}
}
spawn_vultaum_anomaly = {
	random_system_within_border = {
		limit = {
			has_star_flag = precursor_1
			any_planet = { 
				uninhabitable_regular_planet = yes
				NOT = { has_planet_flag = precursor_world }
				has_owner = no
				has_anomaly = no
				is_surveyed = {
					who = root
					status = yes
				}
			}
		}
		random_system_planet = {
			limit = { 
				uninhabitable_regular_planet = yes
				NOT = { has_planet_flag = precursor_world }
				has_owner = no
				has_anomaly = no
				is_surveyed = {
					who = root
					status = yes
				}
			}
			save_event_target_as = precursor_planet
			set_planet_flag = precursor_world
			enable_special_project = {
				name = "VULTAUM_ARTIFACT_FOUND"
				location = this
				owner = root
			}
		}
	}
	set_country_flag = ongoing_precursor_artifact
}
		
spawn_yuht_anomaly = {
	random_system_within_border = {
		limit = {
			has_star_flag = precursor_2
			any_planet = { 
				uninhabitable_regular_planet = yes
				NOT = { has_planet_flag = precursor_world }
				has_owner = no
				has_anomaly = no
				is_surveyed = {
					who = root
					status = yes
				}
			}
		}
		random_system_planet = {
			limit = { 
				uninhabitable_regular_planet = yes
				NOT = { has_planet_flag = precursor_world }
				has_owner = no
				has_anomaly = no
				is_surveyed = {
					who = root
					status = yes
				}
			}
			save_event_target_as = precursor_planet
			set_planet_flag = precursor_world
			enable_special_project = {
				name = "YUHT_ARTIFACT_FOUND"
				location = this
				owner = root
			}
		}
	}
	set_country_flag = ongoing_precursor_artifact
}

spawn_league_anomaly = {
	random_system_within_border = {
		limit = {
			has_star_flag = precursor_3
			any_planet = { 
				uninhabitable_regular_planet = yes
				NOT = { has_planet_flag = precursor_world }
				has_owner = no
				has_anomaly = no
				is_surveyed = {
					who = root
					status = yes
				}
			}
		}
		random_system_planet = {
			limit = { 
				uninhabitable_regular_planet = yes
				NOT = { has_planet_flag = precursor_world }
				has_owner = no
				has_anomaly = no
				is_surveyed = {
					who = root
					status = yes
				}
			}
			save_event_target_as = precursor_planet
			set_planet_flag = precursor_world
			enable_special_project = {
				name = "LEAGUE_ARTIFACT_FOUND"
				location = this
				owner = root
			}
		}
	}
	set_country_flag = ongoing_precursor_artifact
}

spawn_irassian_anomaly = {
	random_system_within_border = {
		limit = {
			has_star_flag = precursor_4
			any_planet = { 
				uninhabitable_regular_planet = yes
				NOT = { has_planet_flag = precursor_world }
				has_owner = no
				has_anomaly = no
				is_surveyed = {
					who = root
					status = yes
				}
			}
		}
		random_system_planet = {
			limit = { 
				uninhabitable_regular_planet = yes
				NOT = { has_planet_flag = precursor_world }
				has_owner = no
				has_anomaly = no
				is_surveyed = {
					who = root
					status = yes
				}
			}
			save_event_target_as = precursor_planet
			set_planet_flag = precursor_world
			enable_special_project = {
				name = "IRASSIAN_ARTIFACT_FOUND"
				location = this
				owner = root
			}
		}
	}
	set_country_flag = ongoing_precursor_artifact
}

spawn_cybrex_anomaly = {
	random_system_within_border = {
		limit = {
			has_star_flag = precursor_5
			any_planet = { 
				uninhabitable_regular_planet = yes
				NOT = { has_planet_flag = precursor_world }
				has_owner = no
				has_anomaly = no
				is_surveyed = {
					who = root
					status = yes
				}
			}
		}
		random_system_planet = {
			limit = { 
				uninhabitable_regular_planet = yes
				NOT = { has_planet_flag = precursor_world }
				has_owner = no
				has_anomaly = no
				is_surveyed = {
					who = root
					status = yes
				}
			}
			save_event_target_as = precursor_planet
			set_planet_flag = precursor_world
			enable_special_project = {
				name = "CYBREX_ARTIFACT_FOUND"
				location = this
				owner = root
			}
		}
	}
	set_country_flag = ongoing_precursor_artifact
}

collector_surrenders_artifact = {
	if = {
		limit = { has_event_chain = "vultaum_chain" }
		add_event_chain_counter = { 
			event_chain = "vultaum_chain" 
			counter = "vultaum_artifacts" 
			amount = 1 
		}
		hidden_effect = { 
			country_event = { id = precursor.97 } 
		}
		break = yes
	}
	if = {
		limit = { has_event_chain = "yuht_chain" }
		add_event_chain_counter = { 
			event_chain = "yuht_chain" 
			counter = "yuht_artifacts" 
			amount = 1 
		}
		hidden_effect = { 
			country_event = { id = precursor.597 } 
		}
		break = yes
	}
	if = {
		limit = { has_event_chain = "first_league_chain" }
		add_event_chain_counter = { 
			event_chain = "first_league_chain" 
			counter = "first_league_artifacts" 
			amount = 1 
		}
		hidden_effect = { 
			country_event = { id = precursor.1097 } 
		}
		break = yes
	}
	if = {
		limit = { has_event_chain = "irassian_chain" }
		add_event_chain_counter = { 
			event_chain = "irassian_chain" 
			counter = "irassian_artifacts" 
			amount = 1 
		}
		hidden_effect = { 
			country_event = { id = precursor.1597 } 
		}
		break = yes
	}
	if = {
		limit = { has_event_chain = "cybrex_chain" }
		add_event_chain_counter = { 
			event_chain = "cybrex_chain" 
			counter = "cybrex_artifacts" 
			amount = 1 
		}
		hidden_effect = { 
			country_event = { id = precursor.2103 } 
		}
		break = yes
	}
}

reset_planet = {
	clear_planet_modifiers = yes
	reroll_deposits = yes
}

clear_blockers = {
	every_tile = {
		limit = { has_blocker = yes }
		remove_blocker = yes
	}
}

reroll_planet = {
	reroll_deposits = yes
	reroll_blockers = yes
	reroll_planet_modifiers = yes
}

remove_shroud_flags = {
	hidden_effect = {
		remove_country_flag = high.1
		remove_country_flag = high.2
		remove_country_flag = high.3
		remove_country_flag = high.4
		remove_country_flag = high.5
		remove_country_flag = high.6
		remove_country_flag = high.7
		remove_country_flag = high.8
		remove_country_flag = high.9
		remove_country_flag = high.10
		remove_country_flag = high.11
		remove_country_flag = high.12
		remove_country_flag = high.13
		remove_country_flag = high.14
		remove_country_flag = high.15
		remove_country_flag = high.16
		remove_country_flag = medium.1
		remove_country_flag = medium.2
		remove_country_flag = medium.3
		remove_country_flag = medium.4
		remove_country_flag = medium.5
		remove_country_flag = medium.6
		remove_country_flag = medium.7
		remove_country_flag = medium.8
		remove_country_flag = medium.9
		remove_country_flag = medium.10
		remove_country_flag = medium.11
		remove_country_flag = medium.12
		remove_country_flag = medium.13
		remove_country_flag = medium.14
		remove_country_flag = medium.15
		remove_country_flag = medium.16
		remove_country_flag = low.1
		remove_country_flag = low.2
		remove_country_flag = low.3
		remove_country_flag = low.4
		remove_country_flag = low.5
		remove_country_flag = low.6
		remove_country_flag = low.7
		remove_country_flag = low.8
		remove_country_flag = low.9
		remove_country_flag = low.10
		remove_country_flag = low.11
		remove_country_flag = low.12
		remove_country_flag = low.13
		remove_country_flag = low.14
		remove_country_flag = low.15
		remove_country_flag = low.16
	}
}

randomize_shroud_flags = {
	random_list = {
		25 = { set_country_flag = high.1 }
		25 = { set_country_flag = high.2 }
		25 = { set_country_flag = high.3 }
		25 = { set_country_flag = high.4 }
		25 = { set_country_flag = high.5 }
		25 = { set_country_flag = high.6 }
		25 = { set_country_flag = high.7 }
		25 = { set_country_flag = high.8 }
		25 = { set_country_flag = high.9 }
		25 = { set_country_flag = high.10 }
		25 = { set_country_flag = high.11 }
		25 = { set_country_flag = high.12 }
		25 = { set_country_flag = high.13 }
		25 = { set_country_flag = high.14 }
		25 = { set_country_flag = high.15 }
		25 = { 
			if = {
				limit = {
					count_owned_ships = {
						limit = { is_ship_size = psionic_avatar }
						count < 1
					}
					count_armies = {
						limit = { army_type = shroud_army }
						count < 1
					}
				}
				set_country_flag = high.16
			}
			else = { set_country_flag = high.1 }
		}
		125 = {}
	}
	random_list = {
		25 = { 
			if = {
				limit = { NOT = { has_country_flag = high.1 } }
				set_country_flag = medium.1 
			}
			else = { set_country_flag = medium.2 }
		}
		25 = { 
			if = {
				limit = { NOT = { has_country_flag = high.2 } }
				set_country_flag = medium.2
			}
			else = { set_country_flag = medium.3 }
		}
		25 = { 
			if = {
				limit = { NOT = { has_country_flag = high.3 } }
				set_country_flag = medium.3 
			}
			else = { set_country_flag = medium.4 }
		}
		25 = { 
			if = {
				limit = { NOT = { has_country_flag = high.4 } }
				set_country_flag = medium.4 
			}
			else = { set_country_flag = medium.5 }
		}
		25 = { 
			if = {
				limit = { NOT = { has_country_flag = high.5 } }
				set_country_flag = medium.5 
			}
			else = { set_country_flag = medium.6 }
		}
		25 = { 
			if = {
				limit = { NOT = { has_country_flag = high.6 } }
				set_country_flag = medium.6
			}
			else = { set_country_flag = medium.7 }
		}
		25 = { 
			if = {
				limit = { NOT = { has_country_flag = high.7 } }
				set_country_flag = medium.7 
			}
			else = { set_country_flag = medium.8 }
		}
		25 = { 
			if = {
				limit = { NOT = { has_country_flag = high.8 } }
				set_country_flag = medium.8 
			}
			else = { set_country_flag = medium.9 }
		}
		25 = { 
			if = {
				limit = { NOT = { has_country_flag = high.9 } }
				set_country_flag = medium.9 
			}
			else = { set_country_flag = medium.10 }
		}
		25 = { 
			if = {
				limit = { NOT = { has_country_flag = high.10 } }
				set_country_flag = medium.10 
			}
			else = { set_country_flag = medium.11 }
		}
		25 = { 
			if = {
				limit = { NOT = { has_country_flag = high.11 } }
				set_country_flag = medium.11 
			}
			else = { set_country_flag = medium.12 }
		}
		25 = { 
			if = {
				limit = { NOT = { has_country_flag = high.12 } }
				set_country_flag = medium.12
			}
			else = { set_country_flag = medium.13 }
		}
		25 = { 
			if = {
				limit = { NOT = { has_country_flag = high.13 } }
				set_country_flag = medium.13 
			}
			else = { set_country_flag = medium.14 }
		}
		25 = { 
			if = {
				limit = { NOT = { has_country_flag = high.14 } }
				set_country_flag = medium.14 
			}
			else = { set_country_flag = medium.15 }
		}
		25 = { 
			if = {
				limit = { NOT = { has_country_flag = high.15 } }
				set_country_flag = medium.15
			}
			else = { set_country_flag = medium.16 }
		}
		25 = { 
			if = {
				limit = { 
					NOT = { has_country_flag = high.16 } 
					count_owned_ships = {
						limit = { is_ship_size = psionic_avatar }
						count < 1
					}
					count_armies = {
						limit = { army_type = shroud_army }
						count < 1
					}
				}
				set_country_flag = medium.16
			}
			else = { set_country_flag = medium.1 }
		}
		80 = {}
	}
	random_list = {
		25 = { 
			if = {
				limit = { 
					NOT = { 
						has_country_flag = high.1 
						has_country_flag = medium.1 
					} 
				}
				set_country_flag = low.1 
			}
			else_if = {
				limit = {
					NOT = { 
						has_country_flag = high.2 
						has_country_flag = medium.2 
					} 
				}
				set_country_flag = low.2 
			}
			else = { set_country_flag = low.3 }
		}
		25 = { 
			if = {
				limit = { 
					NOT = { 
						has_country_flag = high.2 
						has_country_flag = medium.2 
					} 
				}
				set_country_flag = low.2 
			}
			else_if = {
				limit = {
					NOT = { 
						has_country_flag = high.3
						has_country_flag = medium.3 
					} 
				}
				set_country_flag = low.3 
			}
			else = { set_country_flag = low.4 }
		}
		25 = { 
			if = {
				limit = { 
					NOT = { 
						has_country_flag = high.3 
						has_country_flag = medium.3 
					} 
				}
				set_country_flag = low.3 
			}
			else_if = {
				limit = {
					NOT = { 
						has_country_flag = high.4 
						has_country_flag = medium.4 
					} 
				}
				set_country_flag = low.4 
			}
			else = { set_country_flag = low.5 }
		}
		25 = { 
			if = {
				limit = { 
					NOT = { 
						has_country_flag = high.4 
						has_country_flag = medium.4 
					} 
				}
				set_country_flag = low.4 
			}
			else_if = {
				limit = {
					NOT = { 
						has_country_flag = high.5 
						has_country_flag = medium.5 
					} 
				}
				set_country_flag = low.5 
			}
			else = { set_country_flag = low.6 }
		}
		25 = { 
			if = {
				limit = { 
					NOT = { 
						has_country_flag = high.5 
						has_country_flag = medium.5 
					} 
				}
				set_country_flag = low.5
			}
			else_if = {
				limit = {
					NOT = { 
						has_country_flag = high.6 
						has_country_flag = medium.6 
					} 
				}
				set_country_flag = low.6 
			}
			else = { set_country_flag = low.7 }
		}
		25 = { 
			if = {
				limit = { 
					NOT = { 
						has_country_flag = high.6 
						has_country_flag = medium.6 
					} 
				}
				set_country_flag = low.6 
			}
			else_if = {
				limit = {
					NOT = { 
						has_country_flag = high.7 
						has_country_flag = medium.7 
					} 
				}
				set_country_flag = low.7 
			}
			else = { set_country_flag = low.8 }
		}
		25 = { 
			if = {
				limit = { 
					NOT = { 
						has_country_flag = high.7 
						has_country_flag = medium.7 
					} 
				}
				set_country_flag = low.7 
			}
			else_if = {
				limit = {
					NOT = { 
						has_country_flag = high.8 
						has_country_flag = medium.8 
					} 
				}
				set_country_flag = low.8 
			}
			else = { set_country_flag = low.9 }
		}
		25 = { 
			if = {
				limit = { 
					NOT = { 
						has_country_flag = high.8 
						has_country_flag = medium.8 
					} 
				}
				set_country_flag = low.8 
			}
			else_if = {
				limit = {
					NOT = { 
						has_country_flag = high.9 
						has_country_flag = medium.9 
					} 
				}
				set_country_flag = low.9 
			}
			else = { set_country_flag = low.10 }
		}
		25 = { 
			if = {
				limit = { 
					NOT = { 
						has_country_flag = high.9 
						has_country_flag = medium.9
					} 
				}
				set_country_flag = low.9 
			}
			else_if = {
				limit = {
					NOT = { 
						has_country_flag = high.10 
						has_country_flag = medium.10 
					} 
				}
				set_country_flag = low.10 
			}
			else = { set_country_flag = low.11 }
		}
		25 = { 
			if = {
				limit = { 
					NOT = { 
						has_country_flag = high.10
						has_country_flag = medium.10
					} 
				}
				set_country_flag = low.10 
			}
			else_if = {
				limit = {
					NOT = { 
						has_country_flag = high.11 
						has_country_flag = medium.11 
					} 
				}
				set_country_flag = low.11 
			}
			else = { set_country_flag = low.12 }
		}
		25 = { 
			if = {
				limit = { 
					NOT = { 
						has_country_flag = high.11 
						has_country_flag = medium.11 
					} 
				}
				set_country_flag = low.11 
			}
			else_if = {
				limit = {
					NOT = { 
						has_country_flag = high.12 
						has_country_flag = medium.12 
					} 
				}
				set_country_flag = low.12 
			}
			else = { set_country_flag = low.13 }
		}
		25 = { 
			if = {
				limit = { 
					NOT = { 
						has_country_flag = high.12 
						has_country_flag = medium.12 
					} 
				}
				set_country_flag = low.12 
			}
			else_if = {
				limit = {
					NOT = { 
						has_country_flag = high.13 
						has_country_flag = medium.13 
					} 
				}
				set_country_flag = low.13 
			}
			else = { set_country_flag = low.14 }
		}
		25 = { 
			if = {
				limit = { 
					NOT = { 
						has_country_flag = high.13 
						has_country_flag = medium.13 
					} 
				}
				set_country_flag = low.13 
			}
			else_if = {
				limit = {
					NOT = { 
						has_country_flag = high.14 
						has_country_flag = medium.14 
					} 
				}
				set_country_flag = low.14 
			}
			else = { set_country_flag = low.15 }
		}
		25 = { 
			if = {
				limit = { 
					NOT = { 
						has_country_flag = high.14 
						has_country_flag = medium.14 
					} 
				}
				set_country_flag = low.14 
			}
			else_if = {
				limit = {
					NOT = { 
						has_country_flag = high.15 
						has_country_flag = medium.15 
					} 
				}
				set_country_flag = low.15 
			}
			else = { set_country_flag = low.16 }
		}
		25 = { 
			if = {
				limit = { 
					NOT = { 
						has_country_flag = high.15 
						has_country_flag = medium.15 
					} 
				}
				set_country_flag = low.15 
			}
			else_if = {
				limit = {
					NOT = { 
						has_country_flag = high.16
						has_country_flag = medium.16
					} 
				}
				set_country_flag = low.16 
			}
			else = { set_country_flag = low.1 }
		}
		25 = { 
			if = {
				limit = { 
					NOT = { 
						has_country_flag = high.16 
						has_country_flag = medium.16 
					} 
				}
				set_country_flag = low.16 
			}
			else_if = {
				limit = {
					NOT = { 
						has_country_flag = high.1 
						has_country_flag = medium.1 
					}
					count_owned_ships = {
						limit = { is_ship_size = psionic_avatar }
						count < 1
					}
					count_armies = {
						limit = { army_type = shroud_army }
						count < 1
					}
				}
				set_country_flag = low.1 
			}
			else = { set_country_flag = low.2 }
		}
	}
}

happiness_shroud_high = { 
	hidden_effect = {
		random_list = {
			70 = { country_event = { id = utopia.3030 }}
			20 = { country_event = { id = utopia.3045 }}
			10 = { country_event = { id = utopia.3050 }}
		}
	}
}
happiness_shroud_medium = {
	hidden_effect = {
		random_list = {
			50 = { country_event = { id = utopia.3030 }}
			30 = { country_event = { id = utopia.3045 }}
			20 = { country_event = { id = utopia.3050 }}
		}
	}
}
happiness_shroud_low = {
	hidden_effect = {
		random_list = {
			30 = { country_event = { id = utopia.3030 }}
			40 = { country_event = { id = utopia.3045 }}
			30 = { country_event = { id = utopia.3050 }}
		}
	}
}
upkeep_shroud_high = { 
	hidden_effect = {
		random_list = {
			70 = { country_event = { id = utopia.3031 }}
			20 = { country_event = { id = utopia.3045 }}
			10 = { country_event = { id = utopia.3051 }}
		}
	}
}
upkeep_shroud_medium = { 
	hidden_effect = {
		random_list = {
			50 = { country_event = { id = utopia.3031 }}
			30 = { country_event = { id = utopia.3045 }}
			20 = { country_event = { id = utopia.3051 }}
		}
	}
}
upkeep_shroud_low = { 
	hidden_effect = {
		random_list = {
			30 = { country_event = { id = utopia.3031 }}
			40 = { country_event = { id = utopia.3045 }}
			30 = { country_event = { id = utopia.3051 }}
		}
	}
}
research_shroud_high = { 
	hidden_effect = {
		random_list = {
			70 = { country_event = { id = utopia.3032 }}
			20 = { country_event = { id = utopia.3045 }}
			10 = { country_event = { id = utopia.3052 }}
		}
	}
}
research_shroud_medium = { 
	hidden_effect = {
		random_list = {
			50 = { country_event = { id = utopia.3032 }}
			30 = { country_event = { id = utopia.3045 }}
			20 = { country_event = { id = utopia.3052 }}
		}
	}
}
research_shroud_low = { 
	hidden_effect = {
		random_list = {
			30 = { country_event = { id = utopia.3032 }}
			40 = { country_event = { id = utopia.3045 }}
			30 = { country_event = { id = utopia.3052 }}
		}
	}
}
shields_shroud_high = { 
	hidden_effect = {
		random_list = {
			70 = { country_event = { id = utopia.3033 }}
			20 = { country_event = { id = utopia.3045 }}
			10 = { country_event = { id = utopia.3053 }}
		}
	}
}
shields_shroud_medium = { 
	hidden_effect = {
		random_list = {
			50 = { country_event = { id = utopia.3033 }}
			30 = { country_event = { id = utopia.3045 }}
			20 = { country_event = { id = utopia.3053 }}
		}
	}
}
shields_shroud_low = { 
	hidden_effect = {
		random_list = {
			30 = { country_event = { id = utopia.3033 }}
			40 = { country_event = { id = utopia.3045 }}
			30 = { country_event = { id = utopia.3053 }}
		}
	}
}
weapons_shroud_high = { 
	hidden_effect = {
		random_list = {
			70 = { country_event = { id = utopia.3034 }}
			20 = { country_event = { id = utopia.3045 }}
			10 = { country_event = { id = utopia.3054 }}
		}
	}
}
weapons_shroud_medium = { 
	hidden_effect = {
		random_list = {
			50 = { country_event = { id = utopia.3034 }}
			30 = { country_event = { id = utopia.3045 }}
			20 = { country_event = { id = utopia.3054 }}
		}
	}
}
weapons_shroud_low = { 
	hidden_effect = {
		random_list = {
			30 = { country_event = { id = utopia.3034 }}
			40 = { country_event = { id = utopia.3045 }}
			30 = { country_event = { id = utopia.3054 }}
		}
	}
}
firingrate_shroud_high = { 
	hidden_effect = {
		random_list = {
			70 = { country_event = { id = utopia.3035 }}
			20 = { country_event = { id = utopia.3045 }}
			10 = { country_event = { id = utopia.3055 }}
		}
	}
}
firingrate_shroud_medium = { 
	hidden_effect = {
		random_list = {
			50 = { country_event = { id = utopia.3035 }}
			30 = { country_event = { id = utopia.3045 }}
			20 = { country_event = { id = utopia.3055 }}
		}
	}
}
firingrate_shroud_low = { 
	hidden_effect = {
		random_list = {
			30 = { country_event = { id = utopia.3035 }}
			40 = { country_event = { id = utopia.3045 }}
			30 = { country_event = { id = utopia.3055 }}
		}
	}
}
ethics_shroud_high = { 
	hidden_effect = {
		random_list = {
			70 = { country_event = { id = utopia.3036 }}
			20 = { country_event = { id = utopia.3045 }}
			10 = { country_event = { id = utopia.3056 }}
		}
	}
}
ethics_shroud_medium = { 
	hidden_effect = {
		random_list = {
			50 = { country_event = { id = utopia.3036 }}
			30 = { country_event = { id = utopia.3045 }}
			20 = { country_event = { id = utopia.3056 }}
		}
	}
}
ethics_shroud_low = { 
	hidden_effect = {
		random_list = {
			30 = { country_event = { id = utopia.3036 }}
			40 = { country_event = { id = utopia.3045 }}
			30 = { country_event = { id = utopia.3056 }}
		}
	}
}
influence_shroud_high = { 
	hidden_effect = {
		random_list = {
			70 = { country_event = { id = utopia.3037 }}
			20 = { country_event = { id = utopia.3045 }}
			10 = { country_event = { id = utopia.3057 }}
		}
	}
}
influence_shroud_medium = { 
	hidden_effect = {
		random_list = {
			50 = { country_event = { id = utopia.3037 }}
			30 = { country_event = { id = utopia.3045 }}
			20 = { country_event = { id = utopia.3057 }}
		}
	}
}
influence_shroud_low = { 
	hidden_effect = {
		random_list = {
			30 = { country_event = { id = utopia.3037 }}
			40 = { country_event = { id = utopia.3045 }}
			30 = { country_event = { id = utopia.3057 }}
		}
	}
}
unity_shroud_high = { 
	hidden_effect = {
		random_list = {
			70 = { country_event = { id = utopia.3038 }}
			20 = { country_event = { id = utopia.3045 }}
			10 = { country_event = { id = utopia.3058 }}
		}
	}
}
unity_shroud_medium = { 
	hidden_effect = {
		random_list = {
			50 = { country_event = { id = utopia.3038 }}
			30 = { country_event = { id = utopia.3045 }}
			20 = { country_event = { id = utopia.3058 }}
		}
	}
}
unity_shroud_low = { 
	hidden_effect = {
		random_list = {
			30 = { country_event = { id = utopia.3038 }}
			40 = { country_event = { id = utopia.3045 }}
			30 = { country_event = { id = utopia.3058 }}
		}
	}
}
evasion_shroud_high = { 
	hidden_effect = {
		random_list = {
			70 = { country_event = { id = utopia.3039 }}
			20 = { country_event = { id = utopia.3045 }}
			10 = { country_event = { id = utopia.3059 }}
		}
	}
}
evasion_shroud_medium = { 
	hidden_effect = {
		random_list = {
			50 = { country_event = { id = utopia.3039 }}
			30 = { country_event = { id = utopia.3045 }}
			20 = { country_event = { id = utopia.3059 }}
		}
	}
}
evasion_shroud_low = { 
	hidden_effect = {
		random_list = {
			30 = { country_event = { id = utopia.3039 }}
			40 = { country_event = { id = utopia.3045 }}
			30 = { country_event = { id = utopia.3059 }}
		}
	}
}
repair_shroud_high = { 
	hidden_effect = {
		random_list = {
			70 = { country_event = { id = utopia.3040 }}
			20 = { country_event = { id = utopia.3045 }}
			10 = { country_event = { id = utopia.3050 }}
		}
	}
}
repair_shroud_medium = { 
	hidden_effect = {
		random_list = {
			50 = { country_event = { id = utopia.3040 }}
			30 = { country_event = { id = utopia.3045 }}
			20 = { country_event = { id = utopia.3051 }}
		}
	}
}	
repair_shroud_low = { 
	hidden_effect = {
		random_list = {
			30 = { country_event = { id = utopia.3040 }}
			40 = { country_event = { id = utopia.3045 }}
			30 = { country_event = { id = utopia.3052 }}
		}
	}
}
lifespan_shroud_high = { 
	hidden_effect = {
		random_list = {
			70 = { country_event = { id = utopia.3041 }}
			20 = { country_event = { id = utopia.3045 }}
			10 = { country_event = { id = utopia.3053 }}
		}
	}
}
lifespan_shroud_medium = { 
	hidden_effect = {
		random_list = {
			50 = { country_event = { id = utopia.3041 }}
			30 = { country_event = { id = utopia.3045 }}
			20 = { country_event = { id = utopia.3054 }}
		}
	}
}	
lifespan_shroud_low = { 
	hidden_effect = {
		random_list = {
			30 = { country_event = { id = utopia.3041 }}
			40 = { country_event = { id = utopia.3045 }}
			30 = { country_event = { id = utopia.3055 }}
		}
	}
}
speed_shroud_high = { 
	hidden_effect = {
		random_list = {
			70 = { country_event = { id = utopia.3042 }}
			20 = { country_event = { id = utopia.3045 }}
			10 = { country_event = { id = utopia.3056 }}
		}
	}
}
speed_shroud_medium = { 
	hidden_effect = {
		random_list = {
			50 = { country_event = { id = utopia.3042 }}
			30 = { country_event = { id = utopia.3045 }}
			20 = { country_event = { id = utopia.3057 }}
		}
	}
}
speed_shroud_low = { 
	hidden_effect = {
		random_list = {
			30 = { country_event = { id = utopia.3042 }}
			40 = { country_event = { id = utopia.3045 }}
			30 = { country_event = { id = utopia.3058 }}
		}
	}
}
morale_shroud_high = { 
	hidden_effect = {
		random_list = {
			70 = { country_event = { id = utopia.3043 }}
			20 = { country_event = { id = utopia.3045 }}
			10 = { country_event = { id = utopia.3059 }}
		}
	}
}
morale_shroud_medium = { 
	hidden_effect = {
		random_list = {
			50 = { country_event = { id = utopia.3043 }}
			30 = { country_event = { id = utopia.3045 }}
			20 = { country_event = { id = utopia.3050 }}
		}
	}
}
morale_shroud_low = { 
	hidden_effect = {
		random_list = {
			30 = { country_event = { id = utopia.3043 }}
			40 = { country_event = { id = utopia.3045 }}
			30 = { country_event = { id = utopia.3051 }}
		}
	}
}
sensor_shroud_high = { 
	hidden_effect = {
		random_list = {
			70 = { country_event = { id = utopia.3044 }}
			20 = { country_event = { id = utopia.3045 }}
			10 = { country_event = { id = utopia.3052 }}
		}
	}
}
sensor_shroud_medium = { 
	hidden_effect = {
		random_list = {
			50 = { country_event = { id = utopia.3044 }}
			30 = { country_event = { id = utopia.3045 }}
			20 = { country_event = { id = utopia.3053 }}
		}
	}
}
sensor_shroud_low = { 
	hidden_effect = {
		random_list = {
			30 = { country_event = { id = utopia.3044 }}
			40 = { country_event = { id = utopia.3045 }}
			30 = { country_event = { id = utopia.3054 }}
		}
	}
}
avatar_shroud_high = { 
	hidden_effect = {
		random_list = {
			38 = { country_event = { id = utopia.3020 }}
			38 = { country_event = { id = utopia.3021 }}
			20 = { country_event = { id = utopia.3022 }}
			10 = { country_event = { id = utopia.3023 }}
		}
	}
}
avatar_shroud_medium = { 
	hidden_effect = {
		random_list = {
			25 = { country_event = { id = utopia.3020 }}
			25 = { country_event = { id = utopia.3021 }}
			30 = { country_event = { id = utopia.3022 }}
			20 = { country_event = { id = utopia.3023 }}
		}
	}
}
avatar_shroud_low = { 
	hidden_effect = {
		random_list = {
			15 = { country_event = { id = utopia.3020 }}
			15 = { country_event = { id = utopia.3021 }}
			40 = { country_event = { id = utopia.3022 }}
			30 = { country_event = { id = utopia.3023 }}
		}
	}
}

give_fe_tech = { }

shroud_energy_cost = { }

# Given a species, create a mod with trait_cybernetic and apply to all pops, leaders
# and armies that have the original species and the same owner as the scope object.
# Scope: Something that has a species and an owner
create_cybernetic_species_mod = {
	species = {
		save_event_target_as = changing_species

		create_species = {
			is_mod = yes
			name = this
			plural = this
			class = this
			portrait = this
			traits = this
			traits = {
				trait = trait_cybernetic
			}
			homeworld = this
		}
	}

	owner = {
		every_owned_pop = {
			limit = { is_same_species = event_target:changing_species }
			change_species = last_created
		}
		every_owned_leader = {
			limit = { is_same_species = event_target:changing_species }
			change_species = last_created
		}
		every_pool_leader = {
			limit = { is_same_species = event_target:changing_species }
			change_species = last_created
		}
		every_owned_army = {
			limit = {
				exists = species
				is_same_species = event_target:changing_species
			}
			change_species = last_created
		}
		every_owned_ship = {
			limit = {
				is_ship_class = shipclass_colonizer
				is_same_species = event_target:changing_species
			}
			change_species = last_created
		}
	}
}

set_all_comms_surveyed = {
	every_country = {
		limit = {
			exists = from
			has_communications = from
		}
		prev = {
			surveyed = {
  				set_surveyed = yes
   				surveyor = Prev
   			}
    	}
	}
}

# AI Crisis Planet Defense plus Armies
create_ai_planet_defense = {
	create_fleet = {
		name = "NAME_AI_Core"
		effect = {
			set_owner = event_target:AI_crisis
			create_ship = {
				name = random
				design = "NAME_AI_Core"
				graphical_culture = "ai_01"
			}
			set_location = {
				target = root
				distance = 10
				angle = random
			}
		}
	}
	owner = {
		create_leader = {
			type = admiral
			species = owner_main_species
			name = random
			skill = 3
		}
		last_created_leader = { set_age = 0 }
	}
	create_fleet = {
		effect = {
			set_owner = event_target:AI_crisis
			while = {
				count = 25
				create_ship = {
					name = random
					design = "NAME_Euthanizer"
					graphical_culture = "ai_01"
				}
			}
			assign_leader = last_created_leader
			while = {
				count = 50
				create_ship = {
					name = random
					design = "NAME_Sterilizer"
					graphical_culture = "ai_01"
				}
			}
			set_location = {
				target = root
				distance = 45
				angle = random
			}
		}
		settings = {
			garrison = yes
		}
	}
	create_fleet = {
		effect = {
			set_owner = event_target:AI_crisis
			while = {
				count = 20 
				create_army_transport = {
					graphical_culture = "ai_01"
					army_type = "android_army"
				}
			}
			set_location = {
				target = root
				distance = 45
				angle = random
			}
		}
	}
	create_fleet = {
		effect = {
			set_owner = event_target:AI_crisis
			create_ship = {
				name = random
				design = "NAME_AI_Constructor"
				graphical_culture = "ai_01"
			}
			set_location = {
				target = root
				distance = 45
				angle = random
			}
		}
	}
	create_fleet = {
		effect = {
			set_owner = event_target:AI_crisis
			create_ship = {
				name = random
				design = "NAME_AI_Constructor"
				graphical_culture = "ai_01"
			}
			set_location = {
				target = root
				distance = 45
				angle = random
			}
		}
	}
	create_fleet = {
		effect = {
			set_owner = event_target:AI_crisis
			create_ship = {
				name = random
				design = "NAME_AI_Constructor"
				graphical_culture = "ai_01"
			}
			set_location = {
				target = root
				distance = 45
				angle = random
			}
		}
	}
}

create_ai_armies = {
	create_fleet = {
		effect = {
			set_owner = event_target:AI_crisis
			while = {
				count = 20 
				create_army_transport = {
					graphical_culture = "ai_01"
					army_type = "android_army"
				}
			}
			set_location = {
				target = root
				distance = 45
				angle = random
			}
		}
	}
	create_fleet = {
		effect = {
			set_owner = event_target:AI_crisis
			while = {
				count = 20 
				create_army_transport = {
					graphical_culture = "ai_01"
					army_type = "android_army"
				}
			}
			set_location = {
				target = root
				distance = 45
				angle = random
			}
		}
	}
}

create_ai_constructors = {
	if = {
		limit = {
			event_target:AI_crisis = {
				count_owned_ships = {
					limit = { is_ship_size = construction_ship_ai }
					count < 5
				}
			}
		}
		create_fleet = {
			effect = {
				set_owner = event_target:AI_crisis
				create_ship = {
					name = random
					design = "NAME_AI_Constructor"
					graphical_culture = "ai_01"
				}
				set_location = {
					target = root
					distance = 45
					angle = random
				}
			}
		}
	}
}

create_ai_fleet = {
	owner = {
		create_leader = {
			type = admiral
			species = owner_main_species
			name = random
			skill = 3
		}
		last_created_leader = { set_age = 0 }
	}
	create_fleet = {
		effect = {
			set_owner = event_target:AI_crisis
			while = {
				count = 10
				create_ship = {
					name = random
					design = "NAME_Euthanizer"
					graphical_culture = "ai_01"
				}
			}
			assign_leader = last_created_leader
			while = {
				count = 20
				create_ship = {
					name = random
					design = "NAME_Sterilizer"
					graphical_culture = "ai_01"
				}
			}
			set_location = {
				target = root
				distance = 45
				angle = random
			}
		}
	}
}

awaken_fallen_machine_empire = {
	every_country = {
		limit = {
			is_country_type = fallen_empire
			has_authority = auth_machine_intelligence
		}
		
		# country_event = { id = fallen_machine_empire.1 days = 30 random = 30 }
	}
}

awaken_guardians_of_the_galaxy = {
	random_list = {
		60 = { # Awaken one
			random_country = {
				limit = {
					is_country_type = fallen_empire
					OR = {
						has_ethic = ethic_fanatic_materialist
						has_ethic = ethic_fanatic_xenophile
					}
					fleet_power > 40000
				}
				set_country_flag = guardians_of_the_galaxy
				set_timed_country_flag = { flag = timed_guardians_of_the_galaxy days = 1825 }
				set_timed_country_flag = { flag = timed_guardians_of_the_galaxy_2 days = 3650 }
			}
		}
		15 = { # Awaken both!
			every_country = {
				limit = {
					is_country_type = fallen_empire
					OR = {
						has_ethic = ethic_fanatic_materialist
						has_ethic = ethic_fanatic_xenophile
					}
					fleet_power > 40000
				}
				set_country_flag = guardians_of_the_galaxy
				set_timed_country_flag = { flag = timed_guardians_of_the_galaxy days = 1825 }
				set_timed_country_flag = { flag = timed_guardians_of_the_galaxy_2 days = 3650 }
			}
		}
		25 = {} # No awakening
	}
}


create_fallen_empire_platform = { }

create_fallen_empire_colossus = { }

create_fallen_empire_titan = { }

create_fallen_empire_large_ship = { }

create_fallen_empire_small_ship = { }

create_fallen_empire_construction_ship = { }


create_fallen_empire_reinforcements = {
	create_fleet = {
		effect = {
			set_owner = prev.owner
			while = {
				count = 2
				create_fallen_empire_large_ship = yes
			}
			while = {
				count = 8
				create_fallen_empire_small_ship = yes
			}
			random_list = {
				25 = {
					set_location = {
						target = prev
						distance = 30
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 45
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 60
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 75
						angle = random 
					}				
				}				
			}
		}
	}					
}


create_fallen_empire_fleet = {
	create_fleet = {
		effect = {
			set_owner = prev.owner
			while = {
				count = 5
				create_fallen_empire_large_ship = yes
			}
			while = {
				count = 15
				create_fallen_empire_small_ship = yes
			}
			random_list = {
				25 = {
					set_location = {
						target = prev
						distance = 30
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 45
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 60
						angle = random 
					}				
				}
				25 = {
					set_location = {
						target = prev
						distance = 75
						angle = random 
					}				
				}				
			}
		}
	}					
}

create_fallen_empire_starting_navy = { }

# this = country
add_100_unity_per_year_passed = {
	switch = {
		trigger = years_passed
		400 > { add_unity = 40000 }
		350 > { add_unity = 35000 }
		300 > { add_unity = 30000 }
		250 > { add_unity = 25000 }
		200 > { add_unity = 20000 }
		190 > { add_unity = 19000 }
		180 > { add_unity = 18000 }
		170 > { add_unity = 17000 }
		160 > { add_unity = 16000 }
		150 > { add_unity = 15000 }
		140 > { add_unity = 14000 }
		130 > { add_unity = 13000 }
		120 > { add_unity = 12000 }
		110 > { add_unity = 11000 }
		100 > { add_unity = 10000 }
		90 > { add_unity = 9000 }
		80 > { add_unity = 8000 }
		70 > { add_unity = 7000 }
		60 > { add_unity = 6000 }
		50 > { add_unity = 5000 }
		40 > { add_unity = 4000 }
		30 > { add_unity = 3000 }
		20 > { add_unity = 2000 }
		10 > { add_unity = 1000 }
		0 > { add_unity = 500 }
	}
}

set_crisis_stage_1 = {
	set_global_flag = crisis_stage_1
	remove_global_flag = crisis_stage_2
	remove_global_flag = crisis_stage_3
	remove_global_flag = crisis_stage_4
}

set_crisis_stage_2 = {
	remove_global_flag = crisis_stage_1
	set_global_flag = crisis_stage_2
	remove_global_flag = crisis_stage_3
	remove_global_flag = crisis_stage_4
}

set_crisis_stage_3 = {
	remove_global_flag = crisis_stage_1
	remove_global_flag = crisis_stage_2
	set_global_flag = crisis_stage_3
	remove_global_flag = crisis_stage_4
}

set_crisis_stage_4 = {
	remove_global_flag = crisis_stage_1
	remove_global_flag = crisis_stage_2
	remove_global_flag = crisis_stage_3
	set_global_flag = crisis_stage_4
}

end_crisis = {
	remove_global_flag = crisis_stage_1
	remove_global_flag = crisis_stage_2
	remove_global_flag = crisis_stage_3
	remove_global_flag = crisis_stage_4
}

# this = pop
# root = country
remove_hive_minded = {
	if = {
		limit = { has_trait = trait_hive_mind }
		modify_species = {
			species = this
			remove_trait = trait_hive_mind
			change_scoped_species = yes
			# change only this pop's species
		}
	}
}

# this = pop
# root = country
remove_self_modified = {
	if = {
		limit = { has_trait = trait_self_modified }
		modify_species = {
			species = this
			remove_trait = trait_self_modified
			change_scoped_species = yes
			# change only this pop's species
		}
	}
}

# modify a species to behave like robots concerning maintenance and growth
# this = species
apply_robotic_pop_growth_behavior = {
	change_species_characteristics = {
		pop_maintenance = 1

		pops_can_reproduce = no
		new_pop_resource_requirement = {
			type = robot_food
			value = 30.0
		}
		pops_auto_growth = 1.0
	}
}

refugee_pop_effect = {
	remove_modifier = "pop_recently_conquered"
	remove_culture_shock = yes
	planet = { 	
		save_event_target_as = RefugeeEscapedPlanet 
		if = {
			limit = {
				is_under_crisis_bombardment = yes
			}
			solar_system = {
				random_fleet_in_system = {
					limit = {
						owner = {
							is_crisis_faction = yes
						}
					}
					owner = { save_event_target_as = RefugeeEscapedCrisis }
				}
			}
		}		
	}
	owner = {
		save_event_target_as = RefugeeEscapedFrom
		random_relation = {
			limit = {
				is_normal_country = yes
				NOT = { has_policy_flag = refugees_not_allowed } 
				root = {
					OR = { 
						has_citizenship_type = { type = citizenship_full country = prev }
						has_citizenship_type = { type = citizenship_caste_system country = prev }
						AND = {
							has_citizenship_type = { type = citizenship_limited country = prev }
							has_citizenship_type = { type = citizenship_caste_system_limited country = prev }
							prev = { has_policy_flag = refugees_allowed }
						}	
					}		
				}	
				any_owned_planet = {
					habitability = { who = root value > 0.2 }
					is_under_colonization = no
					is_controlled_by = owner
					has_orbital_bombardment = no
					any_tile = {
						has_blocker = no
						has_pop = no
					}									
				}
			}
			random_owned_planet = {
				limit = {
					habitability = { who = root value > 0.2 }
					is_under_colonization = no
					is_controlled_by = owner
					has_orbital_bombardment = no
					any_tile = {
						has_blocker = no
						has_pop = no
					}					
				}
				resettle_pop = {
					pop = root
					planet = this
				}
				root = { add_modifier = { modifier = recent_refugee days = 3600 } }
				if = {
					limit = {
						NOT = {
							owner = {
								any_owned_planet = {
									any_owned_pop = {
										NOT = { is_same_value = root }
										is_same_species = root
									}
								}
							}
						}				
					}		
					root = { pop_event = { id = refugees.1 } }
				}	
				add_organic_sanctuaries = yes
			}
		}		
	}		
}

clear_organic_sanctuaries = { }

add_organic_sanctuaries = { }

upgrade_organic_sanctuaries = { }

generate_start_buildings_and_blockers = {
	random_tile = {
		limit = { has_blocker = no has_building = no num_adjacent_tiles > 3 }
		set_building = "building_capital_1"
		set_deposit = d_energy_deposit				
		random_neighboring_tile = {
			limit = { has_blocker = no has_building = no }
			set_building = "building_hydroponics_farm_1"
			set_deposit = d_rich_farmland_deposit						
		}
		random_neighboring_tile = {
			limit = { has_blocker = no has_building = no }
			set_building = "building_hydroponics_farm_1"
			set_deposit = d_rich_farmland_deposit						
		}
		random_neighboring_tile = {
			limit = { has_blocker = no has_building = no }
			set_building = "building_power_plant_1"
			set_deposit = d_rich_energy_deposit
		}
		random_neighboring_tile = {
			limit = { has_blocker = no has_building = no }
			set_building = "building_mining_network_1"
			set_deposit = d_rich_mineral_deposit
		}				
	}
	random_tile = {
		limit = { has_blocker = no has_building = no }
		set_building = "building_basic_science_lab_1"
		random_list = {
			33 = { 
				set_deposit = d_engineering_deposit										
			}
			33 = { 
				set_deposit = d_society_deposit											
			}
			33 = { 
				set_deposit = d_physics_deposit											
			}					
		}					
	}
	random_tile = {
		limit = { has_blocker = no has_building = no }
		set_building = "building_mining_network_1"
		set_deposit = d_mineral_deposit					
	}				
	random_tile = {
		limit = { has_blocker = no has_building = no }
		set_blocker = "tb_failing_infrastructure"
		set_deposit = d_engineering_deposit			
	}
	random_tile = {
		limit = { has_blocker = no has_building = no }
		set_blocker = "tb_failing_infrastructure"
		set_deposit = d_society_deposit			
	}
	random_tile = {
		limit = { has_blocker = no has_building = no }
		set_blocker = "tb_failing_infrastructure"
		set_deposit = d_physics_deposit			
	}
	random_tile = {
		limit = { has_blocker = no has_building = no }
		set_blocker = "tb_decrepit_dwellings"
		set_deposit = d_rich_energy_deposit				
	}
	random_tile = {
		limit = { has_blocker = no has_building = no }
		set_blocker = "tb_decrepit_dwellings"
		set_deposit = d_rich_farmland_deposit				
	}
	random_tile = {
		limit = { has_blocker = no has_building = no }
		set_blocker = "tb_decrepit_dwellings"
		set_deposit = d_rich_mineral_deposit			
	}
	random_tile = {
		limit = { has_blocker = no has_building = no }
		set_building = "building_power_plant_1"
		set_deposit = d_rich_energy_deposit			
	}	
}

reset_start_buildings_and_blockers_post_apoc = { #Selectively resets necessary tiles for Post-Apoc Civic users. Relies on "generate_start_buildings_and_blockers" and game_start.32
}

reset_start_buildings_and_blockers_life_seeded = { #Selectively resets necessary tiles for Life-Seeded Civic users. Is triggered after "generate_start_buildings_and_blockers" by game_start.34
	# Find capitol and buildings, and then remove them
	# this is needed because planet's deposits were re-rolled after
}


calculate_servitor_morale = { }

remove_culture_shock = {
	if = { 
		limit = { has_modifier = culture_shock_stone_age } 
		remove_modifier = culture_shock_stone_age
	}
	if = { 
		limit = { has_modifier = culture_shock_bronze_age } 
		remove_modifier = culture_shock_bronze_age
	}
	if = { 
		limit = { has_modifier = culture_shock_iron_age } 
		remove_modifier = culture_shock_iron_age
	}
	if = { 
		limit = { has_modifier = culture_shock_late_medieval_age } 
		remove_modifier = culture_shock_late_medieval_age
	}
	if = { 
		limit = { has_modifier = culture_shock_renaissance_age } 
		remove_modifier = culture_shock_renaissance_age
	}
	if = { 
		limit = { has_modifier = culture_shock_steam_age } 
		remove_modifier = culture_shock_steam_age
	}
	if = { 
		limit = { has_modifier = culture_shock_industrial_age } 
		remove_modifier = culture_shock_industrial_age
	}
	if = { 
		limit = { has_modifier = culture_shock_machine_age } 
		remove_modifier = culture_shock_machine_age
	}
	if = { 
		limit = { has_modifier = culture_shock_atomic_age } 
		remove_modifier = culture_shock_atomic_age
	}
	if = { 
		limit = { has_modifier = culture_shock_early_space_age } 
		remove_modifier = culture_shock_early_space_age
	}
}

nuke_primitives_effect = {
	destroy_colony = yes
	set_planet_flag = primitives_nuked_themselves
	change_pc = pc_nuked
	reroll_planet = yes
	every_tile = {
		limit = { has_building = yes }
		if = {
			limit = {
				has_building = "building_primitive_farm"
			}
			remove_building = yes
		}
		else = {
			set_ruined = yes
		}
	}
	set_planet_entity = { entity = nuked_planet_tomb_entity }
	set_planet_flag = STNH_tomb_nuked_special
}

nuke_primitives_toxic_effect = {
	destroy_colony = yes
	change_pc = pc_toxic
	reset_planet = yes
	add_modifier = {
		modifier = "nuclear_devastation"
		days = -1
	}
	orbital_deposit_tile = {
		set_deposit = d_vast_society_deposit
	}
	set_planet_entity = { entity = nuked_planet_toxic_entity }
	set_planet_flag = STNH_tomb_nuked_special
}
generate_cyborg_treats = {
	add_monthly_resource_mult = {
		resource = unity
		value = 1
		min = 5
		max = 100
	}
	add_monthly_resource_mult = {
		resource = society_research
		value = 1
		min = 5
		max = 100
	}
}
create_1st_khan_fleet = {
	create_fleet = {
		name = "NAME_Chosen_of_the_Great_Khan"
		effect = {
			set_owner = event_target:raider_khanate
			while = {
				count = 18
				create_ship = {
					name = random
					design = "NAME_Outrider"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 12
				create_ship = {
					name = random
					design = "NAME_Lancer"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 6
				create_ship = {
					name = random
					design = "NAME_Void_Champion"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 1
				create_ship = {
					name = random
					design = "NAME_Ancestral_Glory"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			assign_leader = last_created_leader
			set_location = {
				target = event_target:marauder_rally_point
				distance = 45
				angle = random
			}
		}
		settings = { 
			can_upgrade = no 
			can_disband = no
			can_change_composition = no 
			can_change_leader = no 
			uses_naval_capacity = no
		}
	}
}

create_2nd_khan_fleet = {
	create_fleet = {
		name = "NAME_Chosen_of_the_Great_Khan"
		effect = {
			set_owner = event_target:raider_khanate
			while = {
				count = 18
				create_ship = {
					name = random
					design = "NAME_Outrider"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 12
				create_ship = {
					name = random
					design = "NAME_Lancer"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 6
				create_ship = {
					name = random
					design = "NAME_Void_Champion"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 1
				create_ship = {
					name = random
					design = "NAME_Ancestral_Glory"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			set_leader = exiled_khan
			set_location = {
				target = event_target:marauder_rally_point
				distance = 45
				angle = random
			}
		}
		settings = { 
			can_upgrade = no 
			can_disband = no
			can_change_composition = no 
			can_change_leader = no 
			uses_naval_capacity = no
		}
	}
}

create_marauder_starbase = {
	create_starbase = {
		size = "starbase_marauder"
		owner = event_target:marauder_starbase_owner
	}		 
}

create_marauder_fleet = {
	create_leader = {
		type = admiral
		species = owner_main_species
		name = random
		skill = 3
		leader_age_min = 25
		leader_age_max = 45
		traits = {
			trait = leader_trait_mercenary_warrior
			trait = random_trait
		}
	}
	create_fleet = {
		effect = {
			set_owner = event_target:raider_khanate
			while = {
				count = 16
				create_ship = {
					name = random
					design = "NAME_Outrider"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 8
				create_ship = {
					name = random
					design = "NAME_Lancer"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 6
				create_ship = {
					name = random
					design = "NAME_Void_Champion"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 1
				create_ship = {
					name = random
					design = "NAME_Ancestral_Glory"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			assign_leader = last_created_leader
			set_location = {
				target = event_target:marauder_rally_point
				distance = 45
				angle = random
			}
		}
		settings = { 
			uses_naval_capacity = no
			can_upgrade = no 
			can_change_composition = no
		}
	}
}

create_marauder_armies = {
	create_leader = {
		type = general
		species = owner_main_species
		name = random
		skill = 3
		traits = {
			trait = random_trait
		}
	}
	create_fleet = {
		effect = {
			set_owner = event_target:raider_khanate
			while = {
				count = 20
				create_army_transport = {
					ship_name = "NAME_Pirate_Transport"
					graphical_culture = "mammalian_01"
					army_type = "assault_army"
					species = event_target:raider_khanate
				}
			}
			set_location = {
				target = event_target:marauder_rally_point
				distance = 20
				angle = random 
			}
		}
	}
	last_created_army = { assign_leader = last_created_leader }
}

create_marauder_constructors = {
	if = {
		limit = {
			event_target:raider_khanate = {
				count_owned_ships = {
					limit = { is_ship_size = constructor }
					count < 5
				}
			}
		}
		create_fleet = {
			effect = {
				set_owner = event_target:raider_khanate
				create_ship = {
					name = random
					design = "NAME_Clan_Builder"
				}
				set_location = {
					target = event_target:marauder_rally_point
					distance = 20
					angle = random 
				}
			}
		}
	}
}

create_small_marauder_auxiliaries = {
	create_leader = {
		type = admiral
		species = event_target:satrapy_species
		name = random
		leader_age_min = 34
		leader_age_max = 45
		traits = { trait = random_trait }
	}
	create_fleet = {
		name = "NAME_Horde_Auxiliary_Fleet"
		effect = {
			set_owner = event_target:raider_khanate
			set_fleet_flag = horde_auxuliaries
			while = {
				count = 10
				create_ship = {
					name = random
					design = "NAME_Outrider"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 4
				create_ship = {
					name = random
					design = "NAME_Lancer"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 2
				create_ship = {
					name = random
					design = "NAME_Void_Champion"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			assign_leader = last_created_leader
			set_location = {
				target = root
				distance = 10
				angle = random
			}
		}
		settings = { 
			can_upgrade = no 
			can_disband = no
			can_change_composition = no 
			can_change_leader = no 
			uses_naval_capacity = no
		}
	}
}

create_medium_marauder_auxiliaries = {
	create_leader = {
		type = admiral
		species = event_target:satrapy_species
		name = random
		leader_age_min = 34
		leader_age_max = 45
		traits = { trait = random_trait }
	}
	create_fleet = {
		name = "NAME_Horde_Auxiliary_Fleet"
		effect = {
			set_owner = event_target:raider_khanate
			set_fleet_flag = horde_auxuliaries
			while = {
				count = 16
				create_ship = {
					name = random
					design = "NAME_Outrider"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 8
				create_ship = {
					name = random
					design = "NAME_Lancer"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 6
				create_ship = {
					name = random
					design = "NAME_Void_Champion"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 1
				create_ship = {
					name = random
					design = "NAME_Ancestral_Glory"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			assign_leader = last_created_leader
			set_location = {
				target = root
				distance = 10
				angle = random
			}
		}
		settings = { 
			can_upgrade = no 
			can_disband = no
			can_change_composition = no 
			can_change_leader = no 
			uses_naval_capacity = no
		}	   
	}
}

create_large_marauder_auxiliaries = {
	create_leader = {
		type = admiral
		species = event_target:satrapy_species
		name = random
		leader_age_min = 34
		leader_age_max = 45
		traits = { trait = random_trait }
	}
	create_fleet = {
		name = "NAME_Horde_Auxiliary_Fleet"
		effect = {
			set_owner = event_target:raider_khanate
			set_fleet_flag = horde_auxuliaries
			while = {
				count = 22
				create_ship = {
					name = random
					design = "NAME_Outrider"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 12
				create_ship = {
					name = random
					design = "NAME_Lancer"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 8
				create_ship = {
					name = random
					design = "NAME_Void_Champion"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 1
				create_ship = {
					name = random
					design = "NAME_Ancestral_Glory"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			assign_leader = last_created_leader
			set_location = {
				target = root
				distance = 10
				angle = random
			}
		}
		settings = { 
			can_upgrade = no 
			can_disband = no
			can_change_composition = no 
			can_change_leader = no 
			uses_naval_capacity = no
		}
	}
}

create_very_large_marauder_auxiliaries = {
	create_leader = {
		type = admiral
		species = event_target:satrapy_species
		name = random
		traits = { trait = random_trait }
	}
	last_created_leader = { set_age = 37 }
	create_fleet = {
		name = "NAME_Horde_Auxiliary_Fleet"
		effect = {
			set_owner = event_target:raider_khanate
			set_fleet_flag = horde_auxuliaries
			while = {
				count = 26
				create_ship = {
					name = random
					design = "NAME_Outrider"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 18
				create_ship = {
					name = random
					design = "NAME_Lancer"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 12
				create_ship = {
					name = random
					design = "NAME_Void_Champion"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			while = {
				count = 1
				create_ship = {
					name = random
					design = "NAME_Ancestral_Glory"
					prefix = no
					graphical_culture = "pirate_01"
				}
			}
			assign_leader = last_created_leader
			set_location = {
				target = root
				distance = 10
				angle = random
			}
		}
		settings = { 
			can_upgrade = no 
			can_disband = no
			can_change_composition = no 
			can_change_leader = no 
			uses_naval_capacity = no
		}
	}
}

create_contingency_starbase = {
	create_starbase = {
		size = starbase_ai
		owner = event_target:AI_crisis
	}
}

create_fe_home_citadel = {
	create_starbase = {
		size = "starbase_citadel"

		module = "shipyard"
		module = "shipyard"
		module = "shipyard"			
		module = "hangar_bay"
		module = "gun_battery"
		module = "gun_battery"		

		building = "command_center"
		building = "target_uplink_computer"
		building = "disruption_field"
		# building = "titan_yards"
		
		effect = {
			while = {
				count = 10
				create_fallen_empire_platform = yes
			}	
		}
	}
}

create_fe_citadel = {
	create_starbase = {
		size = "starbase_citadel"

		module = "shipyard"
		module = "anchorage"
		module = "anchorage"
		module = "hangar_bay"
		module = "gun_battery"
		module = "gun_battery"

		building = "crew_quarters"
		building = "command_center"
		building = "target_uplink_computer"
		# building = "listening_post" #REPLACE?
		
		effect = {
			while = {
				count = 4
				create_fallen_empire_platform = yes
			}	
		}			
	}
}

create_fe_outpost = {
	create_starbase = {
		size = "starbase_outpost"
		effect = {
			while = {
				count = 2
				create_fallen_empire_platform = yes
			}	
		}		
	}
}

create_broken_fe_outpost = {
	create_ambient_object = {
		type = broken_holy_world_outpost
	}
	last_created_ambient_object = {
		set_location = {
			target = prev
			distance = 10
		}
		save_event_target_as = broken_outpost
	}
	#create_ambient_object = {
	#	type = large_debris_object
	#}
	#last_created_ambient_object = {
	#	set_location = {
	#		target = event_target:broken_outpost
	#		distance = 0
	#	}
	#}
	create_ambient_object = {
		type = small_debris_object
	}
	last_created_ambient_object = {
		set_location = {
			target = event_target:broken_outpost
			distance = 1
			angle = 0
		}
	}
	create_ambient_object = {
		type = small_debris_object
	}
	last_created_ambient_object = {
		set_location = {
			target = event_target:broken_outpost
			distance = 1
			angle = 90
		}
	}
	create_ambient_object = {
		type = small_debris_object
	}
	last_created_ambient_object = {
		set_location = {
			target = event_target:broken_outpost
			distance = 1
			angle = 180
		}
	}
	create_ambient_object = {
		type = small_debris_object
	}
	last_created_ambient_object = {
		set_location = {
			target = event_target:broken_outpost
			distance = 1
			angle = 270
		}
	}
	create_ambient_object = {
		type = medium_debris_02_object
	}
	last_created_ambient_object = {
		set_location = {
			target = event_target:broken_outpost
			distance = 3
			angle = 5
		}
	}
	create_ambient_object = {
		type = medium_debris_02_object
	}
	last_created_ambient_object = {
		set_location = {
			target = event_target:broken_outpost
			distance = 9
			angle = 120
		}
	}
	create_ambient_object = {
		type = medium_debris_01_object
	}
	last_created_ambient_object = {
		set_location = {
			target = event_target:broken_outpost
			distance = 6
			angle = 240
		}
	}
}

assign_first_diadochi_planets = {
}
create_first_diadochi = {
}

assign_second_diadochi_planets = {
}
create_second_diadochi = {
}

assign_third_diadochi_planets = {
}
create_third_diadochi = {
}

assign_fourth_diadochi_planets = {
}
create_fourth_diadochi = {
}
assign_diadochi_systems = {
}

fire_warning_sign = {
}

fallen_empire_humiliate_effect = {
	hidden_effect = {
		add_modifier = { modifier = humiliated days = 3600 }
		end_rivalry = event_target:fallen_empire_humiliator
		save_event_target_as = fallen_empire_humiliated
		event_target:fallen_empire_humiliator = { 
			remove_opinion_modifier = { who = event_target:fallen_empire_humiliated modifier = opinion_insult }
			remove_opinion_modifier = { who = event_target:fallen_empire_humiliated modifier = opinion_refused_fallen_empire_demand }
			remove_opinion_modifier = { who = event_target:fallen_empire_humiliated modifier = opinion_refused_fallen_empire_task }
			remove_opinion_modifier = { who = event_target:fallen_empire_humiliated modifier = opinion_failed_fallen_empire_task }
			remove_opinion_modifier = { who = event_target:fallen_empire_humiliated modifier = opinion_majorly_failed_fallen_empire_task }
			remove_opinion_modifier = { who = event_target:fallen_empire_humiliated modifier = opinion_refused_fallen_empire_request }
			remove_opinion_modifier = { who = event_target:fallen_empire_humiliated modifier = opinion_spurned_fallen_empire_gift } 
		}
		event_target:fallen_empire_humiliator = { 
			every_system_within_border = {
				limit = { 
					event_target:fallen_empire_humiliated = { has_claim = prev }
				} 
				remove_claims = { who = event_target:fallen_empire_humiliated }
			}
		}
	}
}

fallen_empire_stop_atrocities_effect = {
	hidden_effect = {
		set_policy = {
			policy = slavery
			option = slavery_not_allowed
			cooldown = yes
		}
		set_policy = {
			policy = purge
			option = purge_not_allowed
			cooldown = yes
		}		
		every_subject = {
			set_policy = {
				policy = slavery
				option = slavery_not_allowed
				cooldown = yes
			}
			set_policy = {
				policy = purge
				option = purge_not_allowed
				cooldown = yes
			}				
		}							
	}
}

fallen_empire_stop_ai_effect = {
	hidden_effect = {
		set_policy = {
			policy = artificial_intelligence_policy
			option = ai_outlawed
			cooldown = yes
		}
	}
}

fallen_empire_cleanse_holy_worlds_effect = {
	every_owned_planet = {
		limit = {
			has_modifier = "holy_planet"
		}
		destroy_colony = yes
	}	
}

fallen_empire_cleanse_border_worlds_effect = {
	every_owned_planet = {
		limit = {
			is_capital = no
			solar_system = {
				has_hyperlane_to = event_target:fallen_empire_humiliator
			}
		}
		destroy_colony = yes
	}
	every_owned_fleet = {
		limit = {
			is_ship_class = shipclass_starbase
			solar_system = {
				has_hyperlane_to = event_target:fallen_empire_humiliator
			}			
		}
		destroy_fleet = this
	}
	every_subject = {
		every_owned_planet = {
			limit = {
				is_capital = no
				solar_system = {
					has_hyperlane_to = event_target:fallen_empire_humiliator
				}
			}
			destroy_colony = yes
		}
		every_owned_fleet = {
			limit = {
				is_ship_class = shipclass_starbase
				solar_system = {
					has_hyperlane_to = event_target:fallen_empire_humiliator
				}			
			}
			destroy_fleet = this
		}	
	}
}

generate_home_system_resources = {
	every_system_planet = {	
		limit = {
			colonizeable_planet = no
		}
		prevent_anomaly = yes
		clear_deposits = yes
	}

	system_star = {	
		set_planet_flag = starting_mining_target
		set_planet_flag = starting_deposit
		orbital_deposit_tile = {
			set_deposit = d_vast_energy_deposit
		}		
	}
	
	random_system_planet = {
		limit = {
			NOT = { has_planet_flag = starting_deposit }
			OR = {	
				is_planet_class = pc_a_star
				is_planet_class = pc_b_star
				is_planet_class = pc_f_star
				is_planet_class = pc_g_star
				is_planet_class = pc_k_star
				is_planet_class = pc_m_star
				is_planet_class = pc_molten
				is_planet_class = pc_gas_giant
			}
		}
		
		set_planet_flag = starting_deposit
		orbital_deposit_tile = {
			random_list = {
				50 = { set_deposit = d_rich_energy_deposit }
				50 = { set_deposit = d_vast_energy_deposit }
			}			
		}		
	}
	
	random_system_planet = {
		limit = {
			NOT = { has_planet_flag = starting_deposit }
			OR = {	
				is_asteroid = yes
				is_planet_class = pc_barren
				is_planet_class = pc_barren_cold
				is_planet_class = pc_toxic
				is_planet_class = pc_frozen
			}
		}
		
		set_planet_flag = starting_mining_target
		set_planet_flag = starting_deposit
		orbital_deposit_tile = {
			set_deposit = d_vast_mineral_deposit
		}		
	}
	
	random_system_planet = {
		limit = {
			NOT = { has_planet_flag = starting_deposit }
			OR = {	
				is_asteroid = yes
				is_planet_class = pc_barren
				is_planet_class = pc_barren_cold
				is_planet_class = pc_toxic
				is_planet_class = pc_frozen
			}	
		}
		
		set_planet_flag = starting_deposit
		orbital_deposit_tile = {
			random_list = {
				50 = { set_deposit = d_rich_mineral_deposit }
				50 = { set_deposit = d_vast_mineral_deposit }
			}
		}		
	}
	
	random_system_planet = {
		limit = {
			NOT = { has_planet_flag = starting_deposit }
			OR = {	
				is_planet_class = pc_gas_giant
				is_planet_class = pc_toxic
				is_planet_class = pc_frozen
				is_planet_class = pc_barren_cold
				is_planet_class = pc_barren
			}
		}
		
		set_planet_flag = starting_research_target
		set_planet_flag = starting_deposit
		
		if = {
			limit = {
				is_planet_class = pc_toxic
			}
			orbital_deposit_tile = {
				set_deposit = d_rich_society_deposit
			}	
		}
		else_if = {
			limit = {
				OR = {
					is_planet_class = pc_barren_cold
					is_planet_class = pc_barren							
				}			
			}
			orbital_deposit_tile = {
				set_deposit = d_rich_physics_deposit
			}
		}
		else = {
			orbital_deposit_tile = {
				set_deposit = d_rich_engineering_deposit
			}						
		}
	}	

	random_system_planet = {
		limit = {
			NOT = { has_planet_flag = starting_deposit }
			OR = {	
				is_planet_class = pc_gas_giant
				is_planet_class = pc_toxic
				is_planet_class = pc_frozen
				is_planet_class = pc_barren_cold
				is_planet_class = pc_barren
			}
		}
		
		set_planet_flag = starting_deposit
		
		if = {
			limit = {
				is_planet_class = pc_toxic
			}
			orbital_deposit_tile = {
				set_deposit = d_rich_society_deposit
			}			
		}
		else_if = {
			limit = {
				OR = {
					is_planet_class = pc_barren_cold
					is_planet_class = pc_barren							
				}			
			}
			orbital_deposit_tile = {
				set_deposit = d_rich_physics_deposit
			}
		}
		else = {
			orbital_deposit_tile = {
				set_deposit = d_rich_engineering_deposit
			}						
		}
	}		
}

clear_buildings = {
	every_tile = {
		limit = { has_building = yes }
		remove_building = yes
	}
}

# Planet Cracker effect
spawn_habitat_cracker_effect = {
	create_ambient_object = {
		location = this
		type = habitat_cracker_object
		duration = 5
		
		use_3d_location = yes
		base_angle_towards = star
		entity_face_object = star
		
		entity_offset = { min = 0 max = 0 }
		
		entity_scale_to_size = yes
		scale = 0.10
	}
}

spawn_ringworld_cracker_effect = {
	create_ambient_object = {
		location = this
		type = ringworld_cracker_object
		duration = 5
		
		use_3d_location = yes
		base_angle_towards = star
		entity_face_object = star
		
		entity_offset = { min = 0 max = 0 }
		
		entity_scale_to_size = yes
		scale = 0.10
	}
}

# Global Pacifier effect
spawn_habitat_pacifier_effect = {
	create_ambient_object = {
		location = this
		type = habitat_pacifier_object
		duration = 5
		
		use_3d_location = yes
		base_angle_towards = star
		entity_face_object = star
		
		entity_offset = { min = 0 max = 0 }
		
		entity_scale_to_size = yes
		scale = 0.10
	}
}

spawn_ringworld_pacifier_effect = {
	create_ambient_object = {
		location = this
		type = ringworld_pacifier_object
		duration = 5
		
		use_3d_location = yes
		base_angle_towards = star
		entity_face_object = star
		
		entity_offset = { min = 0 max = 0 }
		
		entity_scale_to_size = yes
		scale = 0.10
	}
}

# Neutron Sweep effect
spawn_habitat_neutron_effect = {
	create_ambient_object = {
		location = this
		type = habitat_neutron_object
		duration = 5
		
		use_3d_location = yes
		base_angle_towards = star
		entity_face_object = star
		
		entity_offset = { min = 0 max = 0 }
		
		entity_scale_to_size = yes
		scale = 0.10
	}
}

spawn_ringworld_neutron_effect = {
	create_ambient_object = {
		location = this
		type = ringworld_neutron_object
		duration = 5
		
		use_3d_location = yes
		base_angle_towards = star
		entity_face_object = star
		
		entity_offset = { min = 0 max = 0 }
		
		entity_scale_to_size = yes
		scale = 0.10
	}
}

# Divine Enforcer effect
spawn_habitat_divine_effect = {
	create_ambient_object = {
		location = this
		type = habitat_divine_object
		duration = 5
		
		use_3d_location = yes
		base_angle_towards = star
		entity_face_object = star
		
		entity_offset = { min = 0 max = 0 }
		
		entity_scale_to_size = yes
		scale = 0.10
	}
}

spawn_ringworld_divine_effect = {
	create_ambient_object = {
		location = this
		type = ringworld_divine_object
		duration = 5
		
		use_3d_location = yes
		base_angle_towards = star
		entity_face_object = star
		
		entity_offset = { min = 0 max = 0 }
		
		entity_scale_to_size = yes
		scale = 0.10
	}
}

# Nanobot effect
spawn_habitat_nanobot_effect = {
	create_ambient_object = {
		location = this
		type = habitat_nanobot_object
		duration = 5
		
		use_3d_location = yes
		base_angle_towards = star
		entity_face_object = star
		
		entity_offset = { min = 0 max = 0 }
		
		entity_scale_to_size = yes
		scale = 0.10
	}
}

spawn_ringworld_nanobot_effect = {
	create_ambient_object = {
		location = this
		type = ringworld_nanobot_object
		duration = 5
		
		use_3d_location = yes
		base_angle_towards = star
		entity_face_object = star
		
		entity_offset = { min = 0 max = 0 }
		
		entity_scale_to_size = yes
		scale = 0.10
	}
}
 
remove_xuracorp_trades = {
	# remove_modifier = enclave_mineral_trade_1_xur
	# remove_modifier = enclave_mineral_trade_2_xur
	# remove_modifier = enclave_mineral_trade_3_xur
	# remove_modifier = enclave_energy_trade_1_xur
	# remove_modifier = enclave_energy_trade_2_xur
	# remove_modifier = enclave_energy_trade_3_xur
	# remove_modifier = enclave_mineral_food_trade_1_xur
	# remove_modifier = enclave_mineral_food_trade_2_xur
	# remove_modifier = enclave_mineral_food_trade_3_xur
	# remove_modifier = enclave_energy_food_trade_1_xur
	# remove_modifier = enclave_energy_food_trade_2_xur
	# remove_modifier = enclave_energy_food_trade_3_xur
	# remove_modifier = enclave_food_minerals_trade_1_xur
	# remove_modifier = enclave_food_minerals_trade_2_xur
	# remove_modifier = enclave_food_minerals_trade_3_xur
	# remove_modifier = enclave_food_energy_trade_1_xur
	# remove_modifier = enclave_food_energy_trade_2_xur
	# remove_modifier = enclave_food_energy_trade_3_xur
}						  
remove_riggan_trades = {
	# remove_modifier = enclave_mineral_trade_1_rig
	# remove_modifier = enclave_mineral_trade_2_rig
	# remove_modifier = enclave_mineral_trade_3_rig
	# remove_modifier = enclave_energy_trade_1_rig
	# remove_modifier = enclave_energy_trade_2_rig
	# remove_modifier = enclave_energy_trade_3_rig
	# remove_modifier = enclave_mineral_food_trade_1_rig
	# remove_modifier = enclave_mineral_food_trade_2_rig
	# remove_modifier = enclave_mineral_food_trade_3_rig
	# remove_modifier = enclave_energy_food_trade_1_rig
	# remove_modifier = enclave_energy_food_trade_2_rig
	# remove_modifier = enclave_energy_food_trade_3_rig
	# remove_modifier = enclave_food_minerals_trade_1_rig
	# remove_modifier = enclave_food_minerals_trade_2_rig
	# remove_modifier = enclave_food_minerals_trade_3_rig
	# remove_modifier = enclave_food_energy_trade_1_rig
	# remove_modifier = enclave_food_energy_trade_2_rig
	# remove_modifier = enclave_food_energy_trade_3_rig
}

remove_muutagan_trades = {
	# remove_modifier = enclave_mineral_trade_1_mut
	# remove_modifier = enclave_mineral_trade_2_mut
	# remove_modifier = enclave_mineral_trade_3_mut
	# remove_modifier = enclave_energy_trade_1_mut
	# remove_modifier = enclave_energy_trade_2_mut
	# remove_modifier = enclave_energy_trade_3_mut
	# remove_modifier = enclave_mineral_food_trade_1_mut
	# remove_modifier = enclave_mineral_food_trade_2_mut
	# remove_modifier = enclave_mineral_food_trade_3_mut
	# remove_modifier = enclave_energy_food_trade_1_mut
	# remove_modifier = enclave_energy_food_trade_2_mut
	# remove_modifier = enclave_energy_food_trade_3_mut
	# remove_modifier = enclave_food_minerals_trade_1_mut
	# remove_modifier = enclave_food_minerals_trade_2_mut
	# remove_modifier = enclave_food_minerals_trade_3_mut
	# remove_modifier = enclave_food_energy_trade_1_mut
	# remove_modifier = enclave_food_energy_trade_2_mut
	# remove_modifier = enclave_food_energy_trade_3_mut
}											  
add_leader_traits_after_modification = {
	if = {
		limit = { 
			species = { 
				has_trait = trait_erudite 
				NOR = {
					has_trait = trait_cybernetic 
					has_trait = trait_psionic 
					has_trait = trait_latent_psionic					
				}
			} 
		}
		if = {
			limit = { 
				leader_class = admiral 
				NOT = { has_trait = leader_trait_admiral_erudite } 
			}
			add_trait = leader_trait_admiral_erudite
			add_ruler_trait = leader_trait_ruler_erudite
		}
		if = {
			limit = { 
				leader_class = general 
				NOT = { has_trait = leader_trait_general_erudite } 
			}
			add_trait = leader_trait_general_erudite
			add_ruler_trait = leader_trait_ruler_erudite
		}
		if = {
			limit = { 
				leader_class = governor 
				NOT = { has_trait = leader_trait_governor_erudite } 
			}
			add_trait = leader_trait_governor_erudite
			add_ruler_trait = leader_trait_ruler_erudite
		}
		if = {
			limit = { 
				leader_class = scientist 
				NOT = { has_trait = leader_trait_scientist_erudite } 
			}
			add_trait = leader_trait_scientist_erudite
			add_ruler_trait = leader_trait_ruler_erudite
		}
		if = {
			limit = { 
				leader_class = ruler 
				NOT = { has_trait = leader_trait_ruler_erudite } 
			}
			add_trait = leader_trait_ruler_erudite
			add_ruler_trait = leader_trait_ruler_erudite

		}
	}
}

remove_leader_traits_after_modification = {
	if = {
		limit = { 
			species = { 	
				OR = {
					NOT = { has_trait = trait_erudite } 
					has_trait = trait_cybernetic 
					has_trait = trait_psionic 
					has_trait = trait_latent_psionic									
				}				
			} 
		}
		if = {
			limit = { 
				has_trait = leader_trait_admiral_erudite 
			}
			remove_trait = leader_trait_admiral_erudite
			remove_ruler_trait = leader_trait_ruler_erudite
		}
		if = {
			limit = { 
				has_trait = leader_trait_general_erudite 
			}
			remove_trait = leader_trait_general_erudite
			remove_ruler_trait = leader_trait_ruler_erudite
		}
		if = {
			limit = { 
				has_trait = leader_trait_governor_erudite 
			}
			remove_trait = leader_trait_governor_erudite
			remove_ruler_trait = leader_trait_ruler_erudite
		}
		if = {
			limit = { 
				has_trait = leader_trait_scientist_erudite 
			}
			remove_trait = leader_trait_scientist_erudite
			remove_ruler_trait = leader_trait_ruler_erudite
		}
		if = {
			limit = { 
				has_trait = leader_trait_ruler_erudite
			}
			remove_trait = leader_trait_ruler_erudite
			remove_ruler_trait = leader_trait_ruler_erudite
		}		
	}
}

incr_minerallump1_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_mineral_lump1
				value < 1
			}
		}
		set_variable = {
			which = aianom_mineral_lump1
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_mineral_lump1
			value = 1
		}
	}
}

incr_minerallump2_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_mineral_lump2
				value < 1
			}
		}
		set_variable = {
			which = aianom_mineral_lump2
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_mineral_lump2
			value = 1
		}
	}
}

incr_minerallump3_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_mineral_lump3
				value < 1
			}
		}
		set_variable = {
			which = aianom_mineral_lump3
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_mineral_lump3
			value = 1
		}
	}
}

incr_minerallump4_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_mineral_lump4
				value < 1
			}
		}
		set_variable = {
			which = aianom_mineral_lump4
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_mineral_lump4
			value = 1
		}
	}
}

incr_energylump1_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_energy_lump1
				value < 1
			}
		}
		set_variable = {
			which = aianom_energy_lump1
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_energy_lump1
			value = 1
		}
	}
}

incr_energylump2_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_energy_lump2
				value < 1
			}
		}
		set_variable = {
			which = aianom_energy_lump2
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_energy_lump2
			value = 1
		}
	}
}

incr_energylump3_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_energy_lump3
				value < 1
			}
		}
		set_variable = {
			which = aianom_energy_lump3
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_energy_lump3
			value = 1
		}
	}
}

incr_energylump4_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_energy_lump4
				value < 1
			}
		}
		set_variable = {
			which = aianom_energy_lump4
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_energy_lump4
			value = 1
		}
	}
}

incr_physicslump1_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_physics_lump1
				value < 1
			}
		}
		set_variable = {
			which = aianom_physics_lump1
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_physics_lump1
			value = 1
		}
	}
}

incr_physicslump2_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_physics_lump2
				value < 1
			}
		}
		set_variable = {
			which = aianom_physics_lump2
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_physics_lump2
			value = 1
		}
	}
}

incr_physicslump3_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_physics_lump3
				value < 1
			}
		}
		set_variable = {
			which = aianom_physics_lump3
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_physics_lump3
			value = 1
		}
	}
}

incr_physicslump4_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_physics_lump4
				value < 1
			}
		}
		set_variable = {
			which = aianom_physics_lump4
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_physics_lump4
			value = 1
		}
	}
}

incr_societylump1_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_society_lump1
				value < 1
			}
		}
		set_variable = {
			which = aianom_society_lump1
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_society_lump1
			value = 1
		}
	}
}

incr_societylump2_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_society_lump2
				value < 1
			}
		}
		set_variable = {
			which = aianom_society_lump2
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_society_lump2
			value = 1
		}
	}
}

incr_societylump3_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_society_lump3
				value < 1
			}
		}
		set_variable = {
			which = aianom_society_lump3
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_society_lump3
			value = 1
		}
	}
}

incr_societylump4_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_society_lump4
				value < 1
			}
		}
		set_variable = {
			which = aianom_society_lump4
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_society_lump4
			value = 1
		}
	}
}

incr_engineeringlump1_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_engineering_lump1
				value < 1
			}
		}
		set_variable = {
			which = aianom_engineering_lump1
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_engineering_lump1
			value = 1
		}
	}
}

incr_engineeringlump2_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_engineering_lump2
				value < 1
			}
		}
		set_variable = {
			which = aianom_engineering_lump2
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_engineering_lump2
			value = 1
		}
	}
}

incr_engineeringlump3_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_engineering_lump3
				value < 1
			}
		}
		set_variable = {
			which = aianom_engineering_lump3
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_engineering_lump3
			value = 1
		}
	}
}

incr_engineeringlump4_var = {
	if = {
		limit = {
			check_variable = {
				which = aianom_engineering_lump4
				value < 1
			}
		}
		set_variable = {
			which = aianom_engineering_lump4
			value = 1
		}
	}
	else = {
		change_variable = {
			which = aianom_engineering_lump4
			value = 1
		}
	}
}

incr_mineraldepo1_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_mineral_depo1
					value < 1
				}
			}
			set_variable = {
				which = aianom_mineral_depo1
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_mineral_depo1
				value = 1
			}
		}
	}
}

incr_mineraldepo2_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_mineral_depo2
					value < 1
				}
			}
			set_variable = {
				which = aianom_mineral_depo2
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_mineral_depo2
				value = 1
			}
		}
	}
}

incr_mineraldepo3_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_mineral_depo3
					value < 1
				}
			}
			set_variable = {
				which = aianom_mineral_depo3
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_mineral_depo3
				value = 1
			}
		}
	}
}

incr_mineraldepo4_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_mineral_depo4
					value < 1
				}
			}
			set_variable = {
				which = aianom_mineral_depo4
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_mineral_depo4
				value = 1
			}
		}
	}
}

incr_energydepo1_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_energy_depo1
					value < 1
				}
			}
			set_variable = {
				which = aianom_energy_depo1
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_energy_depo1
				value = 1
			}
		}
	}
}

incr_energydepo2_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_energy_depo2
					value < 1
				}
			}
			set_variable = {
				which = aianom_energy_depo2
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_energy_depo2
				value = 1
			}
		}
	}
}

incr_energydepo3_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_energy_depo3
					value < 1
				}
			}
			set_variable = {
				which = aianom_energy_depo3
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_energy_depo3
				value = 1
			}
		}
	}
}

incr_energydepo4_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_energy_depo4
					value < 1
				}
			}
			set_variable = {
				which = aianom_energy_depo4
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_energy_depo4
				value = 1
			}
		}
	}
}

incr_physicsdepo1_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_physics_depo1
					value < 1
				}
			}
			set_variable = {
				which = aianom_physics_depo1
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_physics_depo1
				value = 1
			}
		}
	}
}

incr_physicsdepo2_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_physics_depo2
					value < 1
				}
			}
			set_variable = {
				which = aianom_physics_depo2
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_physics_depo2
				value = 1
			}
		}
	}
}

incr_physicsdepo3_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_physics_depo3
					value < 1
				}
			}
			set_variable = {
				which = aianom_physics_depo3
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_physics_depo3
				value = 1
			}
		}
	}
}

incr_physicsdepo4_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_physics_depo4
					value < 1
				}
			}
			set_variable = {
				which = aianom_physics_depo4
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_physics_depo4
				value = 1
			}
		}
	}
}

incr_societydepo1_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_society_depo1
					value < 1
				}
			}
			set_variable = {
				which = aianom_society_depo1
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_society_depo1
				value = 1
			}
		}
	}
}

incr_societydepo2_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_society_depo2
					value < 1
				}
			}
			set_variable = {
				which = aianom_society_depo2
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_society_depo2
				value = 1
			}
		}
	}
}

incr_societydepo3_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_society_depo3
					value < 1
				}
			}
			set_variable = {
				which = aianom_society_depo3
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_society_depo3
				value = 1
			}
		}
	}
}

incr_societydepo4_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_society_depo4
					value < 1
				}
			}
			set_variable = {
				which = aianom_society_depo4
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_society_depo4
				value = 1
			}
		}
	}
}

incr_engineeringdepo1_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_engineering_depo1
					value < 1
				}
			}
			set_variable = {
				which = aianom_engineering_depo1
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_engineering_depo1
				value = 1
			}
		}
	}
}

incr_engineeringdepo2_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_engineering_depo2
					value < 1
				}
			}
			set_variable = {
				which = aianom_engineering_depo2
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_engineering_depo2
				value = 1
			}
		}
	}
}

incr_engineeringdepo3_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_engineering_depo3
					value < 1
				}
			}
			set_variable = {
				which = aianom_engineering_depo3
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_engineering_depo3
				value = 1
			}
		}
	}
}

incr_engineeringdepo4_var = {
	root.owner = {
		if = {
			limit = {
				check_variable = {
					which = aianom_engineering_depo4
					value < 1
				}
			}
			set_variable = {
				which = aianom_engineering_depo4
				value = 1
			}
		}
		else = {
			change_variable = {
				which = aianom_engineering_depo4
				value = 1
			}
		}
	}
}

add_garanthium = {
	# random_list = {
		# 16 = { 	add_deposit = d_garanthium_deposit_1 }
		# 4 = { 	add_deposit = d_garanthium_deposit_2 }
		# 1 = { 	add_deposit = d_garanthium_deposit_3 }
	# }
}

add_lythuric = {
	# random_list = {
		# 16 = { 	add_deposit = d_lythuric_deposit_1 }
		# 4 = { 	add_deposit = d_lythuric_deposit_2 }
		# 1 = { 	add_deposit = d_lythuric_deposit_3 }
	# }
}

add_engos = {
	# random_list = {
		# 16 = { 	add_deposit = d_engos_deposit_1 }
		# 4 = { 	add_deposit = d_engos_deposit_2 }
		# 1 = { 	add_deposit = d_engos_deposit_3 }
	# }
}

add_teldar = {
	# random_list = {
		# 16 = { 	add_deposit = d_teldar_deposit_1 }
		# 4 = { 	add_deposit = d_teldar_deposit_2 }
		# 1 = { 	add_deposit = d_teldar_deposit_3 }
	# }
}

add_yurantic = {
	# random_list = {
		# 16 = { 	add_deposit = d_yurantic_deposit_1 }
		# 4 = { 	add_deposit = d_yurantic_deposit_2 }
		# 1 = { 	add_deposit = d_yurantic_deposit_3 }
	# }
}

add_aldar = {
	# random_list = {
		# 16 = { 	add_deposit = d_aldar_deposit_1 }
		# 4 = { 	add_deposit = d_aldar_deposit_2 }
		# 1 = { 	add_deposit = d_aldar_deposit_3 }
	# }
}

add_orillium = {
	# random_list = {
		# 16 = { 	add_deposit = d_orillium_deposit_1 }
		# 4 = { 	add_deposit = d_orillium_deposit_2 }
		# 1 = { 	add_deposit = d_orillium_deposit_3 }
	# }
}

add_pitharan = {
	# random_list = {
		# 16 = { 	add_deposit = d_pitharan_deposit_1 }
		# 4 = { 	add_deposit = d_pitharan_deposit_2 }
		# 1 = { 	add_deposit = d_pitharan_deposit_3 }
	# }
}

add_neutronium = {
	# random_list = {
		# 16 = { 	add_deposit = d_neutronium_deposit_1 }
		# 4 = { 	add_deposit = d_neutronium_deposit_2 }
		# 1 = { 	add_deposit = d_neutronium_deposit_3 }
	# }
}

add_dark_matter = {
	# random_list = {
		# 16 = { 	add_deposit = d_dark_matter_deposit_1 }
		# 4 = { 	add_deposit = d_dark_matter_deposit_2 }
		# 1 = { 	add_deposit = d_dark_matter_deposit_3 }
	# }
}

add_satramene = {
	# random_list = {
		# 16 = { 	add_deposit = d_satramene_deposit_1 }
		# 4 = { 	add_deposit = d_satramene_deposit_2 }
		# 1 = { 	add_deposit = d_satramene_deposit_3 }
	# }
}

add_zro = {
	# random_list = {
		# 16 = { 	add_deposit = d_zro_deposit_1 }
		# 4 = { 	add_deposit = d_zro_deposit_2 }
		# 1 = { 	add_deposit = d_zro_deposit_3 }
	# }
}

add_terraforming_gases = {
	# random_list = {
		# 16 = { 	add_deposit = d_terraforming_gas_deposit_1 }
		# 4 = { 	add_deposit = d_terraforming_gas_deposit_2 }
		# 1 = { 	add_deposit = d_terraforming_gas_deposit_3 }
	# }
}

add_terraforming_liquids = {
	# random_list = {
		# 16 = { 	add_deposit = d_terraforming_fluid_deposit_1 }
		# 4 = { 	add_deposit = d_terraforming_fluid_deposit_2 }
		# 1 = { 	add_deposit = d_terraforming_fluid_deposit_3 }
	# }
}

# giving clues, see pop_lcluster_event for popping follow-up events
# this = country getting a clue
generate_lcluster_clue = {

}

# this = solar system to isolate
isolate_system = {
	every_system = {
		limit = { has_hyperlane_to = prev }
		remove_hyperlane = { from = this to = prev }
	}
}

# for follow-up events
# use in AFTER or OPTION for timing reasons
# this = country getting a clue
pop_lcluster_event = {

}

create_enigmatic_cache_fleet = {
	
}

start_lcluster_chain = {
	
}

liquidate_clues = {
	
}

guardian_difficulty = {
	# nothing anymore
}										