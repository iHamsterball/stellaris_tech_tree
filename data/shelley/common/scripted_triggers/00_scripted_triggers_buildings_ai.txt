buildings_simple_allow = {
	planet = {
		OR = {
			AND = {
				free_jobs < 2
				num_free_districts = { type = district_mining value = 0 }
				num_free_districts = { type = district_generator value = 0 }
				num_free_districts = { type = district_farming value = 0 }
			}
			AND = {
				exists = owner
				owner = { is_ai = no }
			}
		}
	}
}

buildings_build_building = {
	planet_devastation < 10
	NOT = {
		planet = {
			any_owned_pop = {
				has_citizenship_type = { type = citizenship_purge }
			}
		}
	}
	OR = {
		has_modifier = planet_population_control
		has_modifier = planet_population_control_gestalt
		has_modifier = planet_robot_assembly_control
		has_modifier = planet_growth_discouraged
		free_district_slots = 0
	}
	NOT = {
		exists = owner
		owner = { is_lithoid_devouring_swarm = yes }
		is_lithoid_devouring_swarm_consumption_world = yes
	}
}

country_uses_food = {
	OR = {
		NOR = {
			has_authority = auth_machine_intelligence
			is_lithoid_empire = yes
		}
		AND = {
			is_lithoid_empire = yes
			NOR = {
				has_country_flag = non_lithoid_subspecies
				any_owned_pop = {
					is_organic_species = yes
					is_lithoid = no
				}
				any_owned_planet = {
					OR = {
						num_districts = { type = district_farming value > 0 }
						num_districts = { type = district_rw_farming value > 0 }
					}
				}
			}
		}
		has_valid_civic = civic_machine_servitor
		has_valid_civic = civic_machine_assimilator
		AND = {
			has_authority = auth_machine_intelligence
			NOT = { has_valid_civic = civic_machine_terminator }
		}
	}
}

country_uses_consumer_goods = {
	OR = {
		is_regular_empire = yes
		has_valid_civic = civic_machine_servitor
	}
}

buildings_unemployed = {
	planet = {
		any_owned_pop = {
			NOT = { has_citizenship_type = { type = citizenship_organic_trophy } }
			NOR = {
				is_pop_category = specialist
				is_pop_category = ruler
			}
			OR = {
				is_unemployed = yes
				has_job = servant
			}
		}
	}
}



buildings_difficulty = {
	is_difficulty > 2
	years_passed > 20
	has_resource = { type = energy amount > 1000 }
	has_resource = { type = minerals amount > 2000 }
}

buildings_stop_pop = {
	exists = planet
	planet = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			AND = {
				count_pops = { limit = { is_sapient = yes } count >= 27 }
				is_planet_class = pc_habitat
				NOT = { owner = { is_gestalt = yes } }
			}
			AND = {
				is_planet_class = pc_habitat
				owner = { is_gestalt = yes }
				count_pops = { limit = { is_sapient = yes } count >= 75 }
				OR = {
					free_housing = 0
					free_jobs = 0
				}
				free_building_slots = 0
			}
			AND = {
				has_building_construction = no
				planet_devastation < 1
				free_jobs = 0
				OR = {
					count_pops = { limit = { is_sapient = yes } count >= 82 }
					AND = {
						num_pops > 77
						owner = { is_hive_empire = yes }
					}
				}
				NOT = { is_planet_class = pc_habitat }
			}
		}
	}
}

districts_build_district ={
	OR = {
		has_modifier = planet_population_control
		has_modifier = planet_population_control_gestalt
		has_modifier = planet_robot_assembly_control
		has_modifier = planet_growth_discouraged
		any_owned_pop = {
			is_unemployed = yes
			OR = {
				specialist_job_check_trigger = no
				has_citizenship_type = { type = citizenship_slavery }
			}
			NOR = { has_citizenship_type = { type = citizenship_assimilation } }
		}
		owner = { is_ai = yes }
		AND = {
			planet_devastation < 10
			has_building_construction = no
			free_jobs < 2
			NOT = {
				planet = {
					any_owned_pop = {
						has_citizenship_type = { type = citizenship_purge }
					}
				}
			}
		}
	}
	NOT = {
		exists = owner
		owner = { is_lithoid_devouring_swarm = yes }
		is_lithoid_devouring_swarm_consumption_world = yes
	}
}

districts_good_energy = {
	planet = {
		OR = {
			has_modifier = hazardous_weather
			has_modifier = divine_algorithm
			has_modifier = energy_relic
			has_modifier = gas_rich_planet_fo_realz
			has_planet_flag = buildings_good_energy
		}
	}
}

districts_good_minerals = {
	planet = {
		OR = {
			has_modifier = extensive_moon_system
			has_modifier = carbon_world
			has_modifier = mineral_rich
			has_modifier = ultra_rich
			has_modifier = asteroid_belt
			has_modifier = minerals_relic
			has_planet_flag = buildings_good_minerals
		}
	}
}

districts_good_food = {
	planet = {
		OR = {
			has_modifier = lush_planet
			has_planet_flag = buildings_good_food
		}
	}
}

jobs_save_goods = {
	exists = planet
	planet = {
		exists = owner
		owner = {
			is_ai = yes
			has_resource = { type = consumer_goods amount < 500 }
		}
	}
}#If true makes the AI stop working consumer goods jobs

jobs_work_minerals = {
	exists = owner
	IF = {
		limit = {
			owner = {
				OR = {
					is_ai = no
					has_resource = {
						type = alloys
						amount < 150
					}
					AND = {
						used_naval_capacity_percent < 1
						is_at_war = yes
					}
					used_naval_capacity_percent < 0.3
					ai_colonize_plans > 0
				}
			}
		}
		always = no
	}
	else = {
		owner = {
			IF = {
				limit = { years_passed < 50 }
				OR = {
					has_resource = {
						type = minerals
						amount < 501
					}#Can afford 1st level upgrades
					AND = {
						has_resource = {
							type = alloys
							amount > 500
						}#Good early game reserve
						OR = {
							AND = {
								has_monthly_income = {
									resource = minerals
									value < 10
								}#Doesn't have enough income in the early game and should shut off alloy production
								has_monthly_income = {
									resource = alloys
									value > 6
								}#Alloy production has not shut off already and should be shut off.
							}#By checking alloy income it's possible to prevent the AI from turning the related jobs on and off.
							AND = {
								has_monthly_income = {
									resource = minerals
									value > 0
								}#Alloy production has shut off and will remain off until hitting 500 minerals.
								has_monthly_income = {
									resource = alloys
									value < 6
								}#Alloy production has shut off and will remain off until hitting 500 minerals.
								has_resource = {
									type = minerals
									amount < 500
								}#Can afford new districts so turn alloy production back on.
							}#By checking alloy income it's possible to prevent the AI from turning the related jobs on and off.
						}
					}
				}
			}
			ELSE = {
				OR = {
					has_resource = {
						type = minerals
						amount < 3000
					}#Can afford 1st level upgrades
					AND = {
						has_resource = {
							type = alloys
							amount > 1500
						}#Good mid game reserve
						years_passed < 100
						OR = {
							AND = {
								has_monthly_income = {
									resource = minerals
									value < 30
								}#Doesn't have enough income in the early game and should shut off alloy production
								has_monthly_income = {
									resource = alloys
									value > 6
								}#Alloy production has not shut off already and should be shut off.
							}#By checking alloy income it's possible to preven the AI from turning the related jobs on and off.
							AND = {
								has_monthly_income = {
									resource = minerals
									value > 0
								}#Alloy production has shut off and will remain off until hitting 500 minerals.
								has_monthly_income = {
									resource = alloys
									value < 6
								}#Alloy production has shut off and will remain off until hitting 500 minerals.
								has_resource = {
									type = minerals
									amount < 500
								}#Can afford new districts so turn alloy production back on.
							}#By checking alloy income it's possible to preven the AI from turning the related jobs on and off.
						}
					}
					AND = {
						has_resource = {
							type = alloys
							amount > 20000
						}#Good late game reserve
						years_passed > 99
						OR = {
							AND = {
								has_monthly_income = {
									resource = minerals
									value < 30
								}#Doesn't have enough income in the early game and should shut off alloy production
								has_monthly_income = {
									resource = alloys
									value > 6
								}#Alloy production has not shut off already and should be shut off.
							}#By checking alloy income it's possible to preven the AI from turning the related jobs on and off.
							AND = {
								has_monthly_income = {
									resource = minerals
									value > 0
								}#Alloy production has shut off and will remain off until hitting 500 minerals.
								has_monthly_income = {
									resource = alloys
									value < 6
								}#Alloy production has shut off and will remain off until hitting 500 minerals.
								has_resource = {
									type = minerals
									amount < 500
								}#Can afford new districts so turn alloy production back on.
							}#By checking alloy income it's possible to preven the AI from turning the related jobs on and off.
						}
					}
				}
			}
		}
	}
}#If true makes the AI really value mining jobs and stops organics from working fabricator jobs.

jobs_work_minerals_goods = {
	exists = owner
	owner = {
		is_ai = yes
		OR = {
			AND = {
				has_resource = {
					type = minerals
					amount < 5000
				}
				has_resource = {
					type = consumer_goods
					amount > 1500
				}
			}
			AND = {
				has_resource = {
					type = minerals
					amount < 3000
				}
				has_resource = {
					type = consumer_goods
					amount > 750
				}
			}
			AND = {
				has_resource = {
					type = minerals
					amount < 501
				}
				has_resource = {
					type = consumer_goods
					amount > 500
				}
			}
		}
	}
}#If true makes the AI really value mining jobs and stops organics from working factory jobs.

buildings_no_motes = {
	exists = owner
	owner = {
		is_ai = yes
		has_monthly_income = {
			resource = volatile_motes
			value < 0
		}
		has_monthly_income = {
			resource = minerals
			value < 0
		}#Check minerals to see if the AI can built out of the shortage
		has_resource = { type = volatile_motes amount = 0 }
	}
}#Used to destroy buildings that require the SR but lack it.

buildings_no_crystals = {
	exists = owner
	buildings_no_motes = no #Crystal buildings can be damaging to the AI economy so if the shortage can be corrected by blowing up mote buildings all the better.
	owner = {
		is_ai = yes
		has_monthly_income = {
			resource = rare_crystals
			value < 0
		}
		has_monthly_income = {
			resource = minerals
			value < 0
		}#Check minerals to see if the AI can built out of the shortage
		has_resource = { type = rare_crystals amount = 0 }
	}
}#Used to destroy buildings that require the SR but lack it.

buildings_no_exotic_gases = {
	exists = owner
	buildings_no_motes = no
	buildings_no_crystals = no #Gas buildings are the most damaging to blow up.
	owner = {
		is_ai = yes
		has_monthly_income = {
			resource = exotic_gases
			value < 0
		}
		has_monthly_income = {
			resource = minerals
			value < 0
		}#Check minerals to see if the AI can built out of the shortage
		has_resource = { type = exotic_gases amount = 0 }
	}
}#Used to destroy buildings that require the SR but lack it.

buildings_has_motes = {
	exists = owner
	OR = {
		owner = {
			NOT = { has_country_flag = buildings_new_mote_building }
			has_monthly_income = {
				resource = volatile_motes
				value >= 2
			}
		}
		AND ={
			free_building_slots > 1
			owner = {
				has_monthly_income = {
					resource = volatile_motes
					value > 0
				}
			}
		}#Can follow up the building with a new mote plant
	}
}#Used in the buildings file to determine if the country has the needed Strategic Resource.

buildings_has_crystals = {
	exists = owner
	OR = {
		owner = {
			NOT = { has_country_flag = buildings_new_crystal_building }
			has_monthly_income = {
				resource = rare_crystals
				value >= 2
			}
		}
		AND ={
			free_building_slots > 1
			owner = {
				has_monthly_income = {
					resource = rare_crystals
					value > 0
				}
			}
		}#Can follow up the building with a new mote plant
	}
}#Used in the buildings file to determine if the country has the needed Strategic Resource.

buildings_has_exotic_gases = {
	exists = owner
	OR = {
		owner = {
			NOT = { has_country_flag = buildings_new_gas_building }
			has_monthly_income = {
				resource = exotic_gases
				value >= 2
			}
		}
		AND ={
			free_building_slots > 1
			owner = {
				has_monthly_income = {
					resource = exotic_gases
					value > 0
				}
			}
		}#Can follow up the building with a new mote plant
	}
}#Used in the buildings file to determine if the country has the needed Strategic Resource.

buildings_upgrade_allow = {
	exists = owner
	OR = {
		owner = { is_ai = no }
		free_jobs < 3
	}
}